[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "빅데이터분석를 위한 수학",
    "section": "",
    "text": "서론\n이 온라인 연습장은 빅데이터분석를 위한 수학의 강의 보충 노트와 연습문제를 모아 놓은 사이트입니다.\n\n이 연습장은 강의에 사용된 슬라이드와 부교재 Deisenroth, Faisal, 와/과 Ong (2020) 를 참고하였다.\n\n강의에 사용된 슬라이드는 서울시립대학교 온라인 강의실에서 다운로드 받을 수 있다.\n강의에 사용된 부교재는 교과서 웹사이트에서 다운로드 받을 수 있다.\n\n이 교재의 각 장에서는 강의에 사용된 슬라이드에서 배운 내용을 보충 설명하고 반드시 학습해야 할 주요 주제를 설명한다.\n\n\n\n\n\n\n\n노트\n\n\n\n\n이 연습장에서 벡터와 행렬은 각각 \\(\\pmb x\\), \\(\\pmb A\\) 와 같이 볼드체로 표기하며 하나의 숫자를 나타내는 변수는 보통의 서체 \\(x\\) 로 표기한다.\n\n\n\n\n\n\n\nDeisenroth, Marc Peter, A Aldo Faisal, 와/과 Cheng Soon Ong. 2020. Mathematics for machine learning. Cambridge University Press."
  },
  {
    "objectID": "qmds/01_schedule.html#강의-진도",
    "href": "qmds/01_schedule.html#강의-진도",
    "title": "1  강의 일정과 내용",
    "section": "1.1 강의 진도",
    "text": "1.1 강의 진도\n\n1주차\n\n\n\n\n슬라이드 번호\n주제\n꼭 알아야 할 내용의 페이지 번호\n\n\n\n\n2\n행렬의 도입\n2-9, 13-17\n\n\n3\n행렬의 연산\n1-3, 6-7, 9-12\n\n\n\n\n2주차\n\n\n\n\n슬라이드 번호\n주제\n꼭 알아야 할 내용의 페이지 번호\n\n\n\n\n4\n역행렬과 연립방정식의 해\n1-5\n\n\n5\n가우스소거법과 연립방정식의 해\n1-21"
  },
  {
    "objectID": "qmds/02_matrix_intro.html#일차연립방정식",
    "href": "qmds/02_matrix_intro.html#일차연립방정식",
    "title": "2  행렬의 도입",
    "section": "2.1 일차연립방정식",
    "text": "2.1 일차연립방정식\n다음과 같이 \\(n\\) 개의 변수 \\(x_1,x_2,\\dots,x_n\\) 에 대한 \\(m\\) 개의 일차 방정식이 있다면 이를 일차연립방정식(a system of linear equations) 이라고 한다.\n\\[\n\\begin{aligned}\na_{11} x_1 + a_{12} x_2 + \\dots + a_{1n} x_n & = y_1 \\\\\na_{21} x_1 + a_{22} x_2 + \\dots + a_{2n} x_n & = y_2 \\\\\n... & \\\\\na_{m1} x_1 + a_{m2} x_2 + \\dots + a_{mn} x_n & = y_m\n\\end{aligned}\n\\tag{2.1}\\]\n위의 일차연립방정식(식 2.1) 에 사용된 변수 \\(x_1,x_2,\\dots,x_n\\) 와 계수 \\(a_{ij}\\), \\(y_i\\) 으로 좀 더 보기 좋고 효율적으로 표현하기 위하여 행렬 \\(\\pmb A\\) 와 벡터 \\(\\pmb x\\), \\(\\pmb y\\) 를 다음과 같이 표기하여\n\\[\n\\pmb A =\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix},\n\\quad\n\\pmb x =\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n,\\quad\n\\pmb y =\n\\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_m\n\\end{bmatrix}\n\\]\n식 2.1 의 일차연립방정식을 다음과 같이 표현할 수 있다.\n\\[\n{\\pmb A} {\\pmb x} = {\\pmb y}, \\text{ 즉} \\quad\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_m\n\\end{bmatrix}\n\\tag{2.2}\\]\n식 2.2 은 \\(y_i\\)의 값을 계산하는 방법이 벡터 \\(\\pmb x\\) 의 변수 \\(x_1,x_2,\\dots,x_n\\) 와 행렬 \\(\\pmb A\\) 의 \\(i\\) 번째 행에 있는 계수들 \\(a_{i1}, a_{i2}, \\dots a_{in}\\) 을 다음과 같은 식으로 계산한다는 의미이다. 즉 일차연립방정식(식 2.1) 을 행렬 \\(\\pmb A\\) 와 벡터 \\(\\pmb x\\), \\(\\pmb y\\) 로 표현한 것이다.\n\\[ \\sum_{i=j}^n a_{ij} x_j = y_i, \\quad i=1,2,\\dots,m \\]\n이제 위에서 일차연립방정식을 표현할 때 사용한 벡터와 행렬의 정의와 기본 연산에 대하여 알아보자."
  },
  {
    "objectID": "qmds/02_matrix_intro.html#행렬과-벡터",
    "href": "qmds/02_matrix_intro.html#행렬과-벡터",
    "title": "2  행렬의 도입",
    "section": "2.2 행렬과 벡터",
    "text": "2.2 행렬과 벡터\n\n2.2.1 행렬\n\\(m\\) 개의 행과 \\(n\\) 개의 열을 가진, 즉 \\(m \\times n\\) 행렬은 보통 알파벳 대문자(upper case letter)로 표현하며 다음과 같은 형태로 나타낸다.\n\\[\n\\pmb A =\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix}\n=(a_{ij})~ (i=1,2,\\dots,m; j=1,2,\\dots,n)\n\\]\n행렬 \\(\\pmb A\\) 가 \\(m\\) 개의 행과 \\(n\\) 개의 열을 가진 행렬이라면 다음과 같이 표시한다.\n\\[  \\pmb A \\in \\RR^{m \\times n} \\]\n\n\n2.2.2 벡터\n벡터(vector)는 일반적인 행렬의 하나의 행 또는 하나의 열을 나타내는 이름으로 사용된다.\n\n행렬의 각 행은 \\(1 \\times n\\) 행렬 혹은 행벡터 (row vector)라고 한다.\n행렬의 각 열은 \\(m \\times 1\\) 행렬 혹은 열벡터 (column vector)라고 한다.\n\n벡터는 다음과 같이 숫자를 모아 놓은 형태에 따라서 행벡터(\\(\\pmb r\\))와 열벡터(\\(\\pmb c\\))로 구분할 수 있다.\n\\[\n\\pmb r =\n\\begin{bmatrix}\n1~ 2 ~3 ~4~\n\\end{bmatrix}\n,\\quad\n\\pmb c =\n\\begin{bmatrix}\n1 \\\\\n2 \\\\\n3 \\\\\n4\n\\end{bmatrix}\n\\]\n또한 벡터는 위치를 나타내는 개체 (geometric vector)로 사용할 수 있다. 위치의 개념을 더 확장하면 벡터는 \\(n\\) 개의 숫자(element)를 순서 있게 모아 놓은 모든 집합, 즉 유클리디안 공간(Euclidean space; \\(\\RR^n\\)) 을 구성하는 개체로 사용할 수 있다."
  },
  {
    "objectID": "qmds/02_matrix_intro.html#중요한-내용과-정의",
    "href": "qmds/02_matrix_intro.html#중요한-내용과-정의",
    "title": "2  행렬의 도입",
    "section": "2.3 중요한 내용과 정의",
    "text": "2.3 중요한 내용과 정의\n\n두 행렬이 같다는 정의\n\n\\[ \\pmb A = \\pmb B  ~~~ \\Leftrightarrow ~~~ a_{ij} =b_{ij} ~~~\\forall i,j \\]\n\n정방행렬(square matrix)\n대각행렬(diagonal matrix)\n상삼각 행렬(upper triangular matrix)과 하삼각행렬(lower triangular matrix)\n영행렬(zero matrix)\n단위행렬(identity matrix)\n대칭행렬(symmetric matrix)\n스칼라(scalar)"
  },
  {
    "objectID": "qmds/03_matrix_compute.html#행렬의-덧셈과-스칼라곱",
    "href": "qmds/03_matrix_compute.html#행렬의-덧셈과-스칼라곱",
    "title": "3  행렬의 연산",
    "section": "3.1 행렬의 덧셈과 스칼라곱",
    "text": "3.1 행렬의 덧셈과 스칼라곱\n\n3.1.1 덧셈\n두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 를 더하는 규칙은 다음과 같다.\n\n두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 는 행과 열의 갯수가 같아야 한다.\n\\(\\pmb A + \\pmb B = \\pmb C\\) 라고 하면, 덧셈의 결과로 만들어진 행렬 \\(\\pmb C\\)는 두 행렬과 같은 수의 행과 열을 가지면 각 원소는 다음과 같다.\n\n\\[ \\pmb A + \\pmb B = \\pmb C \\quad \\rightarrow \\quad c_{ij} = a_{ij} + b_{ij} \\]\n\n\n3.1.2 스칼라곱\n임의의 실수 \\(\\lambda\\) (스칼라)가 주어졌을 때, \\(\\lambda\\) 와 행렬 \\(\\pmb A\\)의 스칼라곱(scalar product) 는 행렬의 모든 원소에 \\(\\lambda\\) 를 곱해준 행렬로 정의된다.\n예를 들어 \\(\\lambda=2\\), \\(\\pmb A \\in \\RR^{2\\times 3}\\) 인 경우\n\\[\n\\lambda \\pmb A =\n2\n\\begin{bmatrix}\n1 & 2 & 3 \\\\\n-1 & 0 & 2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n2 & 4 & 6 \\\\\n-2 & 0 & 4\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "qmds/03_matrix_compute.html#행렬의-곱셈",
    "href": "qmds/03_matrix_compute.html#행렬의-곱셈",
    "title": "3  행렬의 연산",
    "section": "3.2 행렬의 곱셈",
    "text": "3.2 행렬의 곱셈\n먼저 두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 의 곱셈\n\\[ \\pmb A \\times \\pmb B \\equiv \\pmb A \\pmb B \\]\n을 정의하려면 다음과 같은 조건이 만족되어야 한다.\n\n행렬 \\(\\pmb A\\) 의 열의 갯수와 행렬 \\(\\pmb B\\) 의 행의 갯수가 같아야 한다\n\n따라서 두 행렬의 곱셈은 순서를 바꾸면 정의 자체가 안될 수 있다.\n\n정의 3.1 (곱셈의 정의) 이제 두 행렬 \\(\\pmb A \\in \\RR^{m \\times n}\\) 와 \\(\\pmb B \\in \\RR^{n \\times k}\\)의 곱셈은 다음과 같이 정의된다.\n\\[ \\pmb A \\pmb B =  \\pmb C\\]\n행렬 \\(\\pmb C\\) 는 \\(m\\) 개의 행과 \\(k\\)개의 열로 구성된 행렬이며(\\(\\pmb C \\in \\RR^{m \\times k}\\)) 각 원소 \\(c_{ij}\\)는 다음과 같이 정의된다.\n\\[  c_{ij} = \\sum_{l=1}^n a_{il} b_{lk}, \\quad i=1,2,\\dots,m; j=1,2,\\dots,k \\]\n\n먼저 간단한 예제로 다음과 같은 두 개의 행렬의 곱을 생각해 보자.\n\\[\n\\pmb A \\pmb B =\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & 1 \\\\\n-1 & 2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(1)(0) + (2)(-1) & (1)(1) + (2)(2) \\\\\n(3)(0) + (4)(-1) & (3)(1) + (4)(2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-2 & 5 \\\\\n-4 & 11\n\\end{bmatrix}\n\\]\n곱하는 순서를 바꾸어 계산해 보자.\n\\[\n\\pmb B \\pmb A =\n\\begin{bmatrix}\n0 & 1 \\\\\n-1 & 2\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(0)(1) + (1)(-3) & (0)(2) + (1)(4) \\\\\n(-1)(1) + (2)(3) & (-1)(2) + (2)(4)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-3 & 4 \\\\\n4 & 6\n\\end{bmatrix}\n\\]\n위 두 결과를 보면 행렬의 곱셈에서는 교환법칙이 성립하지 않음을 알 수 있다.\n이제 차원이 다른 두 행렬의 곱셈을 살펴보자.\n\\[\n\\pmb A =\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix},\n\\quad\n\\pmb B =\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n\\]\n두 행렬의 곱셈은 정의 3.1 에 위하여 다음과 같이 계산할 수 있다.\n\\[\n\\pmb A \\pmb B =\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n2 & 3 \\\\\n2 & 5\n\\end{bmatrix}\n\\]\n두 행렬의 곱하는 순서를 바꾸면 차원이 전혀 다른 행렬이 얻어진다.\n\\[\n\\pmb B \\pmb A =\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n6 & 4 & 2 \\\\\n-2 & 0 & 2 \\\\\n3 & 2 & 1\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "qmds/03_matrix_compute.html#중요한-내용과-정의",
    "href": "qmds/03_matrix_compute.html#중요한-내용과-정의",
    "title": "3  행렬의 연산",
    "section": "3.3 중요한 내용과 정의",
    "text": "3.3 중요한 내용과 정의\n\n행렬의 전치(transpose operation): \\({\\pmb A}^T\\)\n행렬의 더하기와 스칼라곱의 성질\n행렬의 곱셈은 교환법칙이 성립하지 않는다.\n\n\\[  \\pmb A \\pmb B \\ne  \\pmb B \\pmb A \\tag{3.1}\\]\n\n\n\n\n\n\n주의\n\n\n\n교환법칙이 성립하지 않는다는 의미는 식 3.1 이 언제나 성립한다는 의미는 아니다. 아래와 같이 특별한 경우 교환법칙이 성립하는 경우도 있다.\n\\[\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n\\]\n\n\n\n행렬의 곱셈은 결합법칙과 배분법칙은 성립한다.\n\n\\[ (\\pmb A \\pmb B) \\pmb C = \\pmb A (\\pmb B \\pmb C) \\]\n\\[ (\\pmb A + \\pmb B) \\pmb C = \\pmb A \\pmb C +  \\pmb B \\pmb C \\]"
  },
  {
    "objectID": "qmds/04_matrix_inverse.html#역행렬의-정의",
    "href": "qmds/04_matrix_inverse.html#역행렬의-정의",
    "title": "4  행렬과 연립방정식의 해",
    "section": "4.1 역행렬의 정의",
    "text": "4.1 역행렬의 정의\n정방행렬 \\(\\pmb A \\in \\RR^{n \\times n}\\)의 역행렬(inverse metrix)이 존재하면 \\(\\pmb A^{-1}\\)로 표시하며 다음을 만족하는 행렬이다.\n\\[ \\pmb A \\pmb A^{-1} = \\pmb A^{-1} \\pmb A= \\pmb I \\]\n\n역행렬은 유일하다.\n예를 들어 2차원 정방행렬의 역행렬은 다음과 같이 계산할 수 있다.\n\n\\[\n\\pmb A =\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}, ad-bc \\ne 0\n\\rightarrow\n{\\pmb A}^{-1} = \\frac{1}{ad-bc}\n\\begin{bmatrix}\nd & -b \\\\\n-c & a\n\\end{bmatrix}\n\\]\n위의 2차원 정방행렬의 역행렬에서 만약 \\(ad-bc =0\\) 이면 역행렬이 존재하지 않는다. 일반적으로 모든 정방행렬의 역행렬이 존재하는 것은 아니다."
  },
  {
    "objectID": "qmds/04_matrix_inverse.html#중요한-내용과-정의",
    "href": "qmds/04_matrix_inverse.html#중요한-내용과-정의",
    "title": "4  행렬과 연립방정식의 해",
    "section": "4.2 중요한 내용과 정의",
    "text": "4.2 중요한 내용과 정의\n\n역행렬의 성질\n\n\\[ (\\pmb A \\pmb B)^{-1} = {\\pmb B}^{-1} {\\pmb A}^{-1} \\]\n\\[ (\\pmb A^T)^{-1} = (\\pmb A^{-1})^{T} \\]\n\n연립방정식의 해\n\\(n\\)개의 \\(n\\) 변수 일차연립방정식 \\(\\pmb A \\pmb x = \\pmb y\\)가 주어졌다고 하자. 여기서 \\(\\pmb A\\)는 \\(n \\times n\\) 정방행렬이다. 만약 \\(\\pmb A^{-1}\\)가 존재하면\n\\[ \\pmb x = \\pmb A^{-1} \\pmb y \\]"
  },
  {
    "objectID": "qmds/05_matrix_equation.html#행렬의-기본연산",
    "href": "qmds/05_matrix_equation.html#행렬의-기본연산",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.1 행렬의 기본연산",
    "text": "5.1 행렬의 기본연산\n\n5.1.1 일차연립방정식의 기본연산\n기본연산은 일차연립방정식의 해집합을 변화시키지 않으면서 방정식을 변화시켜 해집합을 구하는 다음의 세 가지 연산을 말한다.\n\n한개의 방정식의 양변에 0이 아닌 상수를 곱하기\n한개의 방정식의 양변에 0이 아닌 상수를 곱한 것을 다른방정식의 양변에 각각 더하기 3. 방정식의 위치를 바꾸기\n\n\n\n5.1.2 행렬의 기본 행연산\n기본 행연산(elementary row operation)은 기본연산을 행렬의 행에 시행하는 것을 말한다.\n\n한 행에 0이 아닌 상수를 곱하기\n한 행에 0이 아닌 상수를 곱한 결과를 다른 행 에더하기\n두 행의 위치를 교환하기\n\n\n\n\n\n\n\n중요\n\n\n\n\n슬라이드의 1-7페이지를 반드시 먼저 학습하세요\n부교재 Deisenroth, Faisal, 와/과 Ong (2020) 의 2.3.1 Particular and General Solution 절을 반드시 학습하세요"
  },
  {
    "objectID": "qmds/05_matrix_equation.html#sec-intro-product",
    "href": "qmds/05_matrix_equation.html#sec-intro-product",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.2 행렬과 벡터의 곱",
    "text": "5.2 행렬과 벡터의 곱\n\\(m \\times n\\) 인 행렬 \\(\\pmb A\\) 와 \\(n\\)-차원 벡터 \\(\\pmb x\\)를 곱하는 과정을 다음과 같이 두 개의 서로 다른 형태로 나타낼 수 있다.\n\n5.2.1 행렬 계산법의 이용\n먼저 행렬과 벡터의 곱셈은 행렬 계산법의 이용하여 나타낼 수 있다.\n\\[\n{\\pmb A} {\\pmb x}  =\n\\begin{bmatrix}\na_{11} & a_{12} & \\dots & a_{1n} \\\\\na_{21} & a_{22} & \\dots & a_{2n} \\\\\n\\vdots & \\vdots &    & \\dots \\\\\na_{m1} & a_{m2} & \\dots & a_{mn}\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\sum_{l=1}^n a_{1l} x_l \\\\\n\\sum_{l=1}^n a_{2l} x_l \\\\\n\\vdots \\\\\n\\sum_{l=1}^n a_{ml} x_l\n\\end{bmatrix} \\\\\n\\]\n\n\n5.2.2 열벡터의 선형조합\n이제 행렬과 벡터의 곱셈을 행렬 \\(\\pmb A\\)을 구성하는 열벡터들의 선형조합(linear combination)으로 나타낼 수 있다.\n\\[\n{\\pmb A} {\\pmb x} =\nx_1\n\\begin{bmatrix}\na_{11} \\\\\na_{21} \\\\\n\\vdots \\\\\na_{m1}\n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\na_{12} \\\\\na_{22} \\\\\n\\vdots \\\\\na_{m2}\n\\end{bmatrix}\n+ \\cdots +\nx_n\n\\begin{bmatrix}\na_{1n} \\\\\na_{2n} \\\\\n\\vdots \\\\\na_{mn}\n\\end{bmatrix}\n=\nx_1 {\\pmb a}_1 + x_2 {\\pmb a}_2 + \\cdots + x_n {\\pmb a}_n\n\\]\n위의 식에서 벡터 \\(\\pmb a_j\\) 는 행렬 \\(\\pmb A\\) 의 \\(j\\) 번째 열벡터이다.\n\n보기 5.1 먼저 간단한 예제로 다음과 같은 행렬과 벡터의 곱셈을 생각해 보자.\n\\[\n\\pmb A =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix},\n\\quad\n\\pmb x =\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n\\]\n행렬과 벡터의 곱셈은 앞에서 배운 행렬의 곱셈 방법으로 다음과 같이 나타낼 수 있다.\n\\[\n\\pmb A \\pmb x =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(1)(1) + (2)(-1)  \\\\\n(1)(1) + (-1)(-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-1 \\\\\n-2\n\\end{bmatrix}\n\\]\n이제 행렬과 벡터의 곱셈을 행렬 \\(\\pmb A\\) 의 열들의 선형 조합으로 표시할 수 있다는 것도 알아두자.\n\\[\n\\pmb A \\pmb x =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n=(1)\n\\begin{bmatrix}\n1 \\\\\n1\n\\end{bmatrix}\n+ (-1)\n\\begin{bmatrix}\n2 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-1 \\\\\n-2\n\\end{bmatrix}\n\\]\n행렬과 벡터의 곱셈을을 앞 행렬의 열과 뒷 벡터의 원소의 선형조합으로 나타낼 수 있다는 사실은 다양한 주제에서 유용하게 사용된다."
  },
  {
    "objectID": "qmds/05_matrix_equation.html#방정식의-근이-무한개인-경우",
    "href": "qmds/05_matrix_equation.html#방정식의-근이-무한개인-경우",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.3 방정식의 근이 무한개인 경우",
    "text": "5.3 방정식의 근이 무한개인 경우\n교재 슬라이드 4번의 5-7 페이지에는 변수가 3개이고 방정식의 개수가 2개인 경우에 \\[\n\\begin{cases}\nx_1 - 2 x_2 + 2 x_3 = 6 \\\\\nx_2 -x_3 =2\n\\end{cases}\n~~\\leftrightarrow~~\n\\pmb A \\pmb x = \\pmb y\n~~\\leftrightarrow~~\n\\begin{bmatrix}\n1 & -2 & 2 \\\\\n0 & 1  & -1\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3 \\end{bmatrix}\n=\n\\begin{bmatrix}\n6 \\\\\n2\n\\end{bmatrix}\n\\tag{5.1}\\]\n아래와 같이 첨가행렬(augmented matrix)을 만들고 기본 행연산을 적용하여 일반해를 구하는 예제가 있다.\n\\[\n\\left[\\begin{array}{ccc|c}\n1 & -2 & 2 & 6\\\\\n0 & 1  & -1 & 2\n\\end{array}\\right]\n\\]\n\n5.3.1 매개변수를 이용하는 법\n만약 슬라이드에 나오는 것처럼 매개변수(\\(x_3=t\\))를 방정식에 추가하여 첨가행렬의 왼쪽을 항등행렬로 바꾸는 행연산을 적용하면 다음과 같은 결과를 얻고\n\\[\n\\\n\\left[\\begin{array}{ccc|c}\n1 & 0 & 0 & 10\\\\\n0 & 1  & 0 & t+ 2 \\\\\n0 & 0 & 1 & t\n\\end{array}\\right]\n\\] 해집합은 다음과 같이 주어진다.\n\\[\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\nt+2 \\\\\nt\n\\end{bmatrix}\n=\nt\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}, \\quad t \\in \\RR\n\\tag{5.2}\\]\n\n\n5.3.2 특수해와 선형조합을 이용\n다시 식 5.1 에서 제시된 방정식을 열벡터의 선형조합의 형태로 아래와 같이 써보자\n\\[\n\\pmb A \\pmb x = \\pmb y\n~~\\leftrightarrow~~\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n-2  \\\\\n1   \n\\end{bmatrix}\n+ x_3\n\\begin{bmatrix}\n2 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n6 \\\\\n2\n\\end{bmatrix}\n\\tag{5.3}\\]\n이제 위의 식에서 \\(x_3=0\\) 으로 놓으면 다음과 같이 \\(x_1\\) 과 \\(x_2\\) 만 포함된 간단한 방정식이 나타나며 이를 만족하는 특수해(particular solution) \\(\\pmb x^*\\) 를 다음과 같이 구할 수 있다.\n\\[\nx_3=0,~~\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n-2  \\\\\n1   \n\\end{bmatrix}\n=\n\\begin{bmatrix}\n6 \\\\\n2\n\\end{bmatrix}\n~ \\rightarrow~~~\n\\pmb x^* =\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3 \\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0 \\end{bmatrix}\n\\tag{5.4}\\]\n위의 식 5.4 에서 구한 특수해 \\(\\pmb x^*\\) 는 식 5.2 에서 주어진 해집합에서 나타난 마지막 벡터이다.\n이제 식 5.1 에 주어진 방정식은 특별한 해 \\(\\pmb x^*\\) 만 만족하는 것이 아니므로 일반해(general solution)을 구해야 한다. 일반해를 구하는 방법은 다음과 같이 행렬 \\(\\pmb A\\)의 열들의 선형 조합이 영벡터가 되는 \\(\\pmb x^{**}\\)를 찾는 것이다.\n\\[\n\\pmb A \\pmb x^{**} = \\pmb 0\n\\quad \\leftrightarrow \\quad\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n-2  \\\\\n1   \n\\end{bmatrix}\n+ x_3\n\\begin{bmatrix}\n2 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n0 \\\\\n0\n\\end{bmatrix}\n\\tag{5.5}\\]\n식 5.5 를 만족하는 해는 유일하지 않다. 하지만 행렬 \\(\\pmb A\\)의 두 번째 열과 세 번째 열의 부호가 반대인 점을 이용하면 다음과 같은 식을 얻을 수 있다.\n\\[\n(0)\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\n(1)\n\\begin{bmatrix}\n-2  \\\\\n1   \n\\end{bmatrix}\n+ (1)\n\\begin{bmatrix}\n2 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n0 \\\\\n0\n\\end{bmatrix}\n\\] 따라서 식 5.5 를 만족하는 해 \\(\\pmb x^{**}\\) 는 쉽게 찾을 수 있다.\n\\[ \\pmb x^{**} =\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n\\]\n이제 \\(\\pmb A \\pmb x^{*} = \\pmb y\\) 를 만족하는 특수해 \\(\\pmb x^{*}\\) 와 \\(\\pmb A \\pmb x^{**} = \\pmb 0\\) 를 만족하는 \\(\\pmb x^{**}\\) 를 이용하여 일반해를 구해보자. 임의의 실수 \\(t\\) 에 대하여 다음과 같은 식이 만족한다.\n\\[ \\pmb A (\\pmb x^* + t \\pmb x^{**})  =\n\\pmb A \\pmb x^* + t \\pmb A \\pmb x^{**}\n= \\pmb y + t \\pmb 0 = \\pmb y \\quad  t \\in \\RR\\]\n위의 식에 의하여 이제 일반해를 구하면 다음과 같이 나타나며 이는 매개변수를 이용하여 얻은 해(식 5.2)와 동일하게 나타난다.\n\\[\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3\n\\end{bmatrix}\n=\n\\pmb x^* + t \\pmb x^{**}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}+\nt\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix},\n\\quad t \\in \\RR\n\\]"
  },
  {
    "objectID": "qmds/05_matrix_equation.html#영공간과-일반해",
    "href": "qmds/05_matrix_equation.html#영공간과-일반해",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.4 영공간과 일반해",
    "text": "5.4 영공간과 일반해\n식 5.5 에 나타난 것과 같이 주어진 행렬 \\(\\pmb A\\) 의 열들의 선형조합을 영벡터로 만드는 해의 집합을 영공간(Null space)라고 한다.\n\n정의 5.1 일차연립방정식(또는 행렬 방정식) \\(\\pmb A \\pmb x = \\pmb 0\\) 의 해집합을 \\(\\pmb A\\)의 영공간이라고 하고 \\(N (\\pmb A)\\)라고 표시한다. 즉,\n\\[ N( \\pmb A)=\\{ \\pmb x: \\pmb A \\pmb x= \\pmb 0 \\}\\]\n\n위에서 방정식의 해를 찾을 때 특수한 해를 먼저 찾고 일반해를 만드는 작업은 영공간을 찾는 작업과 동일하다."
  },
  {
    "objectID": "qmds/05_matrix_equation.html#중요한-내용과-정의",
    "href": "qmds/05_matrix_equation.html#중요한-내용과-정의",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.5 중요한 내용과 정의",
    "text": "5.5 중요한 내용과 정의\n\n행사다리꼴 행렬(row echelon form)의 정의\n피벗(pivot 혹은 leading entry)의 정의\n기약행사다리꼴(reduced row echelon form)의 정의\n가우스 소거법의 절차\n\n기본변수(basic variable)와 자유변수(free variable)\n매개변수의 이용\n\n연립일차방정식이 유일한 해를 가질 조건\n정방행렬의 역행령이 존재하면 영공간은 영벡터와 같다.\n\n\n\n\n\nDeisenroth, Marc Peter, A Aldo Faisal, 와/과 Cheng Soon Ong. 2020. Mathematics for machine learning. Cambridge University Press."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Deisenroth, Marc Peter, A Aldo Faisal, and Cheng Soon Ong. 2020.\nMathematics for Machine Learning. Cambridge University Press."
  }
]