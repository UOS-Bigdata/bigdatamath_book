[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "빅데이터분석를 위한 수학",
    "section": "",
    "text": "서론\n이 온라인 연습장은 빅데이터분석를 위한 수학의 강의 보충 노트와 연습문제를 모아 놓은 사이트입니다.\n\n이 연습장은 강의에 사용된 슬라이드와 부교재 Deisenroth, Faisal, 와/과 Ong (2020) 를 참고하였다.\n\n강의에 사용된 슬라이드는 서울시립대학교 온라인 강의실에서 다운로드 받을 수 있다.\n강의에 사용된 부교재는 교과서 웹사이트에서 다운로드 받을 수 있다.\n\n이 교재의 각 장에서는 강의에 사용된 슬라이드에서 배운 내용을 보충 설명하고 반드시 학습해야 할 주요 주제를 설명한다.\n\n\n\n\n\n\n\n노트\n\n\n\n\n이 연습장의 각 장(chapter)의 내용은 강의에 사용된 슬라이드 번호의 내용과 일치합니다.\n이 연습장에서 벡터와 행렬은 각각 \\(\\pmb x\\), \\(\\pmb A\\) 와 같이 볼드체로 표기하며 하나의 숫자를 나타내는 변수는 보통의 서체 \\(x\\) 로 표기한다.\n정의, 정리, 예제 등이 끝나는 표시는 \\(\\blacksquare\\) 로 나타낸다.\n\n\n\n\n\n\n\nDeisenroth, Marc Peter, A Aldo Faisal, 와/과 Cheng Soon Ong. 2020. Mathematics for machine learning. Cambridge University Press.",
    "crumbs": [
      "서론"
    ]
  },
  {
    "objectID": "qmds/01_schedule.html#강의-진도",
    "href": "qmds/01_schedule.html#강의-진도",
    "title": "1  강의 일정과 내용",
    "section": "1.1 강의 진도",
    "text": "1.1 강의 진도\n\n1주차\n\n\n\n\n슬라이드\n주제\n페이지 번호\n부교재 내용\n\n\n\n\n2\n행렬의 도입\n2-9, 13-17\n\n\n\n3\n행렬의 연산\n1-3, 6-7, 9-12\n\n\n\n\n\n2주차\n\n\n\n\n슬라이드\n주제\n페이지 번호\n부교재 내용\n\n\n\n\n4\n역행렬과 연립방정식의 해\n1-5\n\n\n\n5\n가우스소거법과 연립방정식의 해\n1-21\n27-32 페이지\n\n\n6\n행연산 행렬과 역행렬\n\n33-34 페이지\n\n\n\n\n3주차\n\n\n\n\n슬라이드\n주제\n페이지 번호\n부교재 내용\n\n\n\n\n7\n벡터공간\n6-10\n37-40 페이지\n\n\n8\n벡터공간의 기저와 차원\n1-15\n40-47 페이지\n\n\n9\n행렬의 계수\n4, 7\n47-48 페이지\n\n\n\n\n4주차\n\n추석연휴\n\n5주차\n\n\n\n\n슬라이드\n주제\n페이지 번호\n부교재 내용\n\n\n\n\n10\n선형사상\n1,2,4,5,6,7\n48-49 페이지\n\n\n11\n선형사상\n\n50- 53 페이지\n\n\n12\n기저변환과 변환행렬\n\n\n\n\n13\n선형변환의 핵과 상\n1-2\n58-60 페이지\n\n\n14\n아핀공간",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>강의 일정과 내용</span>"
    ]
  },
  {
    "objectID": "qmds/02_matrix_intro.html#일차연립방정식",
    "href": "qmds/02_matrix_intro.html#일차연립방정식",
    "title": "2  행렬의 도입",
    "section": "2.1 일차연립방정식",
    "text": "2.1 일차연립방정식\n다음과 같이 \\(n\\) 개의 변수 \\(x_1,x_2,\\dots,x_n\\) 에 대한 \\(m\\) 개의 일차 방정식이 있다면 이를 일차연립방정식(a system of linear equations) 이라고 한다.\n\\[\n\\begin{aligned}\na_{11} x_1 + a_{12} x_2 + \\dots + a_{1n} x_n & = y_1 \\\\\na_{21} x_1 + a_{22} x_2 + \\dots + a_{2n} x_n & = y_2 \\\\\n... & \\\\\na_{m1} x_1 + a_{m2} x_2 + \\dots + a_{mn} x_n & = y_m\n\\end{aligned}\n\\tag{2.1}\\]\n위의 일차연립방정식(식 2.1) 에 사용된 변수 \\(x_1,x_2,\\dots,x_n\\) 와 계수 \\(a_{ij}\\), \\(y_i\\) 으로 좀 더 보기 좋고 효율적으로 표현하기 위하여 행렬 \\(\\pmb A\\) 와 벡터 \\(\\pmb x\\), \\(\\pmb y\\) 를 다음과 같이 표기하여\n\\[\n\\pmb A =\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix},\n\\quad\n\\pmb x =\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n,\\quad\n\\pmb y =\n\\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_m\n\\end{bmatrix}\n\\]\n식 2.1 의 일차연립방정식을 다음과 같이 표현할 수 있다.\n\\[\n{\\pmb A} {\\pmb x} = {\\pmb y}, \\text{ 즉} \\quad\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ny_1 \\\\\ny_2 \\\\\n\\vdots \\\\\ny_m\n\\end{bmatrix}\n\\tag{2.2}\\]\n식 2.2 은 \\(y_i\\)의 값을 계산하는 방법이 벡터 \\(\\pmb x\\) 의 변수 \\(x_1,x_2,\\dots,x_n\\) 와 행렬 \\(\\pmb A\\) 의 \\(i\\) 번째 행에 있는 계수들 \\(a_{i1}, a_{i2}, \\dots a_{in}\\) 을 다음과 같은 식으로 계산한다는 의미이다. 즉 일차연립방정식(식 2.1) 을 행렬 \\(\\pmb A\\) 와 벡터 \\(\\pmb x\\), \\(\\pmb y\\) 로 표현한 것이다.\n\\[ \\sum_{i=j}^n a_{ij} x_j = y_i, \\quad i=1,2,\\dots,m \\]\n이제 위에서 일차연립방정식을 표현할 때 사용한 벡터와 행렬의 정의와 기본 연산에 대하여 알아보자.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>행렬의 도입</span>"
    ]
  },
  {
    "objectID": "qmds/02_matrix_intro.html#행렬과-벡터",
    "href": "qmds/02_matrix_intro.html#행렬과-벡터",
    "title": "2  행렬의 도입",
    "section": "2.2 행렬과 벡터",
    "text": "2.2 행렬과 벡터\n\n2.2.1 행렬\n\\(m\\) 개의 행과 \\(n\\) 개의 열을 가진, 즉 \\(m \\times n\\) 행렬은 보통 알파벳 대문자(upper case letter)로 표현하며 다음과 같은 형태로 나타낸다.\n\\[\n\\pmb A =\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn}\n\\end{bmatrix}\n=(a_{ij})~ (i=1,2,\\dots,m; j=1,2,\\dots,n)\n\\]\n행렬 \\(\\pmb A\\) 가 \\(m\\) 개의 행과 \\(n\\) 개의 열을 가진 행렬이라면 다음과 같이 표시한다.\n\\[  \\pmb A \\in \\RR^{m \\times n} \\]\n\n\n2.2.2 벡터\n벡터(vector)는 일반적인 행렬의 하나의 행 또는 하나의 열을 나타내는 이름으로 사용된다.\n\n행렬의 각 행은 \\(1 \\times n\\) 행렬 혹은 행벡터 (row vector)라고 한다.\n행렬의 각 열은 \\(m \\times 1\\) 행렬 혹은 열벡터 (column vector)라고 한다.\n\n벡터는 다음과 같이 숫자를 모아 놓은 형태에 따라서 행벡터(\\(\\pmb r\\))와 열벡터(\\(\\pmb c\\))로 구분할 수 있다.\n\\[\n\\pmb r =\n\\begin{bmatrix}\n1~ 2 ~3 ~4~\n\\end{bmatrix}\n,\\quad\n\\pmb c =\n\\begin{bmatrix}\n1 \\\\\n2 \\\\\n3 \\\\\n4\n\\end{bmatrix}\n\\]\n또한 벡터는 위치를 나타내는 개체 (geometric vector)로 사용할 수 있다. 위치의 개념을 더 확장하면 벡터는 \\(n\\) 개의 숫자(element)를 순서 있게 모아 놓은 모든 집합, 즉 유클리디안 공간(Euclidean space; \\(\\RR^n\\)) 을 구성하는 개체로 사용할 수 있다.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>행렬의 도입</span>"
    ]
  },
  {
    "objectID": "qmds/02_matrix_intro.html#중요한-내용과-정의",
    "href": "qmds/02_matrix_intro.html#중요한-내용과-정의",
    "title": "2  행렬의 도입",
    "section": "2.3 중요한 내용과 정의",
    "text": "2.3 중요한 내용과 정의\n\n두 행렬이 같다는 정의\n\n\\[ \\pmb A = \\pmb B  ~~~ \\Leftrightarrow ~~~ a_{ij} =b_{ij} ~~~\\forall i,j \\]\n\n정방행렬(square matrix)\n대각행렬(diagonal matrix)\n상삼각 행렬(upper triangular matrix)과 하삼각행렬(lower triangular matrix)\n영행렬(zero matrix)\n단위행렬(identity matrix)\n대칭행렬(symmetric matrix)\n스칼라(scalar)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>행렬의 도입</span>"
    ]
  },
  {
    "objectID": "qmds/03_matrix_compute.html#행렬의-덧셈과-스칼라곱",
    "href": "qmds/03_matrix_compute.html#행렬의-덧셈과-스칼라곱",
    "title": "3  행렬의 연산",
    "section": "3.1 행렬의 덧셈과 스칼라곱",
    "text": "3.1 행렬의 덧셈과 스칼라곱\n\n3.1.1 덧셈\n두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 를 더하는 규칙은 다음과 같다.\n\n두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 는 행과 열의 갯수가 같아야 한다.\n\\(\\pmb A + \\pmb B = \\pmb C\\) 라고 하면, 덧셈의 결과로 만들어진 행렬 \\(\\pmb C\\)는 두 행렬과 같은 수의 행과 열을 가지면 각 원소는 다음과 같다.\n\n\\[ \\pmb A + \\pmb B = \\pmb C \\quad \\rightarrow \\quad c_{ij} = a_{ij} + b_{ij} \\]\n\n\n3.1.2 스칼라곱\n임의의 실수 \\(\\lambda\\) (스칼라)가 주어졌을 때, \\(\\lambda\\) 와 행렬 \\(\\pmb A\\)의 스칼라곱(scalar product) 는 행렬의 모든 원소에 \\(\\lambda\\) 를 곱해준 행렬로 정의된다.\n예를 들어 \\(\\lambda=2\\), \\(\\pmb A \\in \\RR^{2\\times 3}\\) 인 경우\n\\[\n\\lambda \\pmb A =\n2\n\\begin{bmatrix}\n1 & 2 & 3 \\\\\n-1 & 0 & 2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n2 & 4 & 6 \\\\\n-2 & 0 & 4\n\\end{bmatrix}\n\\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>행렬의 연산</span>"
    ]
  },
  {
    "objectID": "qmds/03_matrix_compute.html#행렬의-곱셈",
    "href": "qmds/03_matrix_compute.html#행렬의-곱셈",
    "title": "3  행렬의 연산",
    "section": "3.2 행렬의 곱셈",
    "text": "3.2 행렬의 곱셈\n먼저 두 행렬 \\(\\pmb A\\) 와 \\(\\pmb B\\) 의 곱셈\n\\[ \\pmb A \\times \\pmb B \\equiv \\pmb A \\pmb B \\]\n을 정의하려면 다음과 같은 조건이 만족되어야 한다.\n\n행렬 \\(\\pmb A\\) 의 열의 갯수와 행렬 \\(\\pmb B\\) 의 행의 갯수가 같아야 한다\n\n따라서 두 행렬의 곱셈은 순서를 바꾸면 정의 자체가 안될 수 있다.\n\n정의 3.1 (곱셈의 정의) 이제 두 행렬 \\(\\pmb A \\in \\RR^{m \\times n}\\) 와 \\(\\pmb B \\in \\RR^{n \\times k}\\)의 곱셈은 다음과 같이 정의된다.\n\\[ \\pmb A \\pmb B =  \\pmb C\\]\n행렬 \\(\\pmb C\\) 는 \\(m\\) 개의 행과 \\(k\\)개의 열로 구성된 행렬이며(\\(\\pmb C \\in \\RR^{m \\times k}\\)) 각 원소 \\(c_{ij}\\)는 다음과 같이 정의된다.\n\\[  c_{ij} = \\sum_{l=1}^n a_{il} b_{lk}, \\quad i=1,2,\\dots,m; j=1,2,\\dots,k \\]\n\n먼저 간단한 예제로 다음과 같은 두 개의 행렬의 곱을 생각해 보자.\n\\[\n\\pmb A \\pmb B =\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & 1 \\\\\n-1 & 2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(1)(0) + (2)(-1) & (1)(1) + (2)(2) \\\\\n(3)(0) + (4)(-1) & (3)(1) + (4)(2)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-2 & 5 \\\\\n-4 & 11\n\\end{bmatrix}\n\\]\n곱하는 순서를 바꾸어 계산해 보자.\n\\[\n\\pmb B \\pmb A =\n\\begin{bmatrix}\n0 & 1 \\\\\n-1 & 2\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(0)(1) + (1)(3) & (0)(2) + (1)(4) \\\\\n(-1)(1) + (2)(3) & (-1)(2) + (2)(4)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n3 & 4 \\\\\n5 & 6\n\\end{bmatrix}\n\\]\n위 두 결과를 보면 행렬의 곱셈에서는 교환법칙이 성립하지 않음을 알 수 있다.\n이제 차원이 다른 두 행렬의 곱셈을 살펴보자.\n\\[\n\\pmb A =\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix},\n\\quad\n\\pmb B =\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n\\]\n두 행렬의 곱셈은 정의 3.1 에 위하여 다음과 같이 계산할 수 있다.\n\\[\n\\pmb A \\pmb B =\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n2 & 3 \\\\\n2 & 5\n\\end{bmatrix}\n\\]\n두 행렬의 곱하는 순서를 바꾸면 차원이 전혀 다른 행렬이 얻어진다.\n\\[\n\\pmb B \\pmb A =\n\\begin{bmatrix}\n0 & 2 \\\\\n1 & -1 \\\\\n0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 & 3\\\\\n3 & 2 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n6 & 4 & 2 \\\\\n-2 & 0 & 2 \\\\\n3 & 2 & 1\n\\end{bmatrix}\n\\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>행렬의 연산</span>"
    ]
  },
  {
    "objectID": "qmds/03_matrix_compute.html#중요한-내용과-정의",
    "href": "qmds/03_matrix_compute.html#중요한-내용과-정의",
    "title": "3  행렬의 연산",
    "section": "3.3 중요한 내용과 정의",
    "text": "3.3 중요한 내용과 정의\n\n행렬의 전치(transpose operation): \\({\\pmb A}^T\\)\n행렬의 더하기와 스칼라곱의 성질\n행렬의 곱셈은 교환법칙이 성립하지 않는다.\n\n\\[  \\pmb A \\pmb B \\ne  \\pmb B \\pmb A \\tag{3.1}\\]\n\n\n\n\n\n\n주의\n\n\n\n교환법칙이 성립하지 않는다는 의미는 식 3.1 이 언제나 성립한다는 의미는 아니다. 아래와 같이 특별한 경우 교환법칙이 성립하는 경우도 있다.\n\\[\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0 \\\\\n0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & 3\n\\end{bmatrix}\n\\]\n\n\n\n행렬의 곱셈은 결합법칙과 배분법칙은 성립한다.\n\n\\[ (\\pmb A \\pmb B) \\pmb C = \\pmb A (\\pmb B \\pmb C) \\]\n\\[ (\\pmb A + \\pmb B) \\pmb C = \\pmb A \\pmb C +  \\pmb B \\pmb C \\]",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>행렬의 연산</span>"
    ]
  },
  {
    "objectID": "qmds/04_matrix_inverse.html#역행렬의-정의",
    "href": "qmds/04_matrix_inverse.html#역행렬의-정의",
    "title": "4  행렬과 연립방정식의 해",
    "section": "4.1 역행렬의 정의",
    "text": "4.1 역행렬의 정의\n정방행렬 \\(\\pmb A \\in \\RR^{n \\times n}\\)의 역행렬(inverse metrix)이 존재하면 \\(\\pmb A^{-1}\\)로 표시하며 다음을 만족하는 행렬이다.\n\\[ \\pmb A \\pmb A^{-1} = \\pmb A^{-1} \\pmb A= \\pmb I \\]\n\n역행렬은 유일하다.\n예를 들어 2차원 정방행렬의 역행렬은 다음과 같이 계산할 수 있다.\n\n\\[\n\\pmb A =\n\\begin{bmatrix}\na & b \\\\\nc & d\n\\end{bmatrix}, ad-bc \\ne 0\n\\rightarrow\n{\\pmb A}^{-1} = \\frac{1}{ad-bc}\n\\begin{bmatrix}\nd & -b \\\\\n-c & a\n\\end{bmatrix}\n\\tag{4.1}\\]\n위의 2차원 정방행렬의 역행렬에서 만약 \\(ad-bc =0\\) 이면 역행렬이 존재하지 않는다. 일반적으로 모든 정방행렬의 역행렬이 존재하는 것은 아니다.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>행렬과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/04_matrix_inverse.html#중요한-내용과-정의",
    "href": "qmds/04_matrix_inverse.html#중요한-내용과-정의",
    "title": "4  행렬과 연립방정식의 해",
    "section": "4.2 중요한 내용과 정의",
    "text": "4.2 중요한 내용과 정의\n\n역행렬의 성질\n\n\\[ (\\pmb A \\pmb B)^{-1} = {\\pmb B}^{-1} {\\pmb A}^{-1} \\]\n\\[ (\\pmb A^T)^{-1} = (\\pmb A^{-1})^{T} \\]\n\n연립방정식의 해\n\\(n\\)개의 \\(n\\) 변수 일차연립방정식 \\(\\pmb A \\pmb x = \\pmb y\\)가 주어졌다고 하자. 여기서 \\(\\pmb A\\)는 \\(n \\times n\\) 정방행렬이다. 만약 \\(\\pmb A^{-1}\\)가 존재하면\n\\[ \\pmb x = \\pmb A^{-1} \\pmb y \\]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>행렬과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/05_matrix_equation.html#행렬의-기본연산",
    "href": "qmds/05_matrix_equation.html#행렬의-기본연산",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.1 행렬의 기본연산",
    "text": "5.1 행렬의 기본연산\n\n5.1.1 일차연립방정식의 기본연산\n기본연산은 일차연립방정식의 해집합을 변화시키지 않으면서 방정식을 변화시켜 해집합을 구하는 다음의 세 가지 연산을 말한다.\n\n한개의 방정식의 양변에 0이 아닌 상수를 곱하기\n한개의 방정식의 양변에 0이 아닌 상수를 곱한 것을 다른방정식의 양변에 각각 더하기\n\n방정식의 위치를 바꾸기\n\n\n\n5.1.2 행렬의 기본 행연산\n기본 행연산(elementary row operation)은 기본연산을 행렬의 행에 시행하는 것을 말한다.\n\n한 행에 0이 아닌 상수를 곱하기\n한 행에 0이 아닌 상수를 곱한 결과를 다른 행 에더하기\n두 행의 위치를 교환하기",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>가우스소거법과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/05_matrix_equation.html#sec-intro-product",
    "href": "qmds/05_matrix_equation.html#sec-intro-product",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.2 행렬과 벡터의 곱",
    "text": "5.2 행렬과 벡터의 곱\n\\(m \\times n\\) 인 행렬 \\(\\pmb A\\) 와 \\(n\\)-차원 벡터 \\(\\pmb x\\)를 곱하는 과정을 다음과 같이 두 개의 서로 다른 형태로 나타낼 수 있다.\n\n행렬 계산법의 이용\n\n먼저 행렬과 벡터의 곱셈은 행렬 계산법의 이용하여 나타낼 수 있다.\n\\[\n{\\pmb A} {\\pmb x}  =\n\\begin{bmatrix}\na_{11} & a_{12} & \\dots & a_{1n} \\\\\na_{21} & a_{22} & \\dots & a_{2n} \\\\\n\\vdots & \\vdots &    & \\dots \\\\\na_{m1} & a_{m2} & \\dots & a_{mn}\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\sum_{l=1}^n a_{1l} x_l \\\\\n\\sum_{l=1}^n a_{2l} x_l \\\\\n\\vdots \\\\\n\\sum_{l=1}^n a_{ml} x_l\n\\end{bmatrix} \\\\\n\\]\n\n열벡터의 선형조합\n\n이제 행렬과 벡터의 곱셈을 행렬 \\(\\pmb A\\)을 구성하는 열벡터들의 선형조합(linear combination)으로 나타낼 수 있다.\n\\[\n{\\pmb A} {\\pmb x} =\nx_1\n\\begin{bmatrix}\na_{11} \\\\\na_{21} \\\\\n\\vdots \\\\\na_{m1}\n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\na_{12} \\\\\na_{22} \\\\\n\\vdots \\\\\na_{m2}\n\\end{bmatrix}\n+ \\cdots +\nx_n\n\\begin{bmatrix}\na_{1n} \\\\\na_{2n} \\\\\n\\vdots \\\\\na_{mn}\n\\end{bmatrix}\n=\nx_1 {\\pmb a}_1 + x_2 {\\pmb a}_2 + \\cdots + x_n {\\pmb a}_n\n\\]\n위의 식에서 벡터 \\(\\pmb a_j\\) 는 행렬 \\(\\pmb A\\) 의 \\(j\\) 번째 열벡터이다.\n\n예제 5.1 먼저 간단한 예제로 다음과 같은 행렬과 벡터의 곱셈을 생각해 보자.\n\\[\n\\pmb A =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix},\n\\quad\n\\pmb x =\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n\\]\n행렬과 벡터의 곱셈은 앞에서 배운 행렬의 곱셈 방법으로 다음과 같이 나타낼 수 있다.\n\\[\n\\pmb A \\pmb x =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n(1)(1) + (2)(-1)  \\\\\n(1)(1) + (-1)(-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-1 \\\\\n-2\n\\end{bmatrix}\n\\]\n이제 행렬과 벡터의 곱셈을 행렬 \\(\\pmb A\\) 의 열들의 선형 조합으로 표시할 수 있다는 것도 알아두자.\n\\[\n\\pmb A \\pmb x =\n\\begin{bmatrix}\n1 & 2 \\\\\n1 & -1\n\\end{bmatrix}\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n=(1)\n\\begin{bmatrix}\n1 \\\\\n1\n\\end{bmatrix}\n+ (-1)\n\\begin{bmatrix}\n2 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-1 \\\\\n-2\n\\end{bmatrix}\n\\]\n행렬과 벡터의 곱셈을을 앞 행렬의 열과 뒷 벡터의 원소의 선형조합으로 나타낼 수 있다는 사실은 다양한 주제에서 유용하게 사용된다.\n\\(\\blacksquare\\)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>가우스소거법과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/05_matrix_equation.html#방정식의-근이-무한개인-경우",
    "href": "qmds/05_matrix_equation.html#방정식의-근이-무한개인-경우",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.3 방정식의 근이 무한개인 경우",
    "text": "5.3 방정식의 근이 무한개인 경우\n교재 슬라이드 4번의 5-7 페이지에는 변수가 3개이고 방정식의 개수가 2개인 경우에 \\[\n\\begin{cases}\nx_1 - 2 x_2 + 2 x_3 = 6 \\\\\nx_2 -x_3 =2\n\\end{cases}\n~~\\leftrightarrow~~\n\\pmb A \\pmb x = \\pmb y\n~~\\leftrightarrow~~\n\\begin{bmatrix}\n1 & -2 & 2 \\\\\n0 & 1  & -1\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3 \\end{bmatrix}\n=\n\\begin{bmatrix}\n6 \\\\\n2\n\\end{bmatrix}\n\\tag{5.1}\\]\n아래와 같이 첨가행렬(augmented matrix)을 만들고 기본 행연산을 적용하여 일반해를 구하는 예제가 있다.\n\\[\n\\left[\\begin{array}{ccc|c}\n1 & -2 & 2 & 6\\\\\n0 & 1  & -1 & 2\n\\end{array}\\right]\n\\tag{5.2}\\]\n위의 식 5.2 에서 첨가행렬의 왼쪽 부분이 행사다리꼴 행렬(row echelon form)임을 유의하자. 식 5.2 의 두 번째 행에 2를 곱해서 첫번 째 행에 더하면 다음과 같이 기약행사다리꼴 행렬(reduced row echelon form)이 된다.\n\\[\n\\left[\\begin{array}{ccc|c}\n1 & 0 & 0 & 10\\\\\n0 & 1  & -1 & 2\n\\end{array}\\right]\n\\tag{5.3}\\]\n이제 방정식을 푸는 3가지 방법에 대하여 알아보자.\n(1) 매개변수와 가우스소거법를 이용하는 법\n슬라이드에 나오는 방법처럼 식 5.3 에 매개변수(\\(x_3=t\\))를 사용하기 위하여 첨가행렬의 마지막 행에 \\((0,0,1,t)\\)를 추가한 후 첨가행렬의 왼쪽을 항등행렬로 바꾸는 행연산을 적용하면(가우스 소거법) 다음과 같은 결과를 얻고\n\\[\n\\\n\\left[\\begin{array}{ccc|c}\n1 & 0 & 0 & 10\\\\\n0 & 1  & 0 & t+ 2 \\\\\n0 & 0 & 1 & t\n\\end{array}\\right]\n\\] 해집합은 다음과 같이 주어진다.\n\\[\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\nt+2 \\\\\nt\n\\end{bmatrix}\n=\nt\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}, \\quad t \\in \\RR\n\\tag{5.4}\\]\n(2) 특수해와 선형조합을 이용\n다시 식 5.3 에서 제시된 방정식을 열벡터의 선형조합의 형태로 아래와 같이 써보자\n\\[\n\\pmb A \\pmb x = \\pmb y\n~~\\leftrightarrow~~\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n0  \\\\\n1   \n\\end{bmatrix}\n+ x_3\n\\begin{bmatrix}\n0 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2\n\\end{bmatrix}\n\\tag{5.5}\\]\n이제 위의 식에서 \\(x_3=0\\) 으로 놓으면 다음과 같이 \\(x_1\\) 과 \\(x_2\\) 만 포함된 간단한 방정식이 나타나며 이를 만족하는 특수해(particular solution) \\(\\pmb x^*\\) 를 다음과 같이 구할 수 있다.\n\\[\nx_3=0,~~\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n0  \\\\\n1   \n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2\n\\end{bmatrix}\n~ \\rightarrow~~~\n\\pmb x^* =\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3 \\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0 \\end{bmatrix}\n\\tag{5.6}\\]\n위의 식 5.6 에서 구한 특수해 \\(\\pmb x^*\\) 는 식 5.4 에서 주어진 해집합에서 나타난 마지막 벡터이다.\n이제 식 5.1 에 주어진 방정식은 특별한 해 \\(\\pmb x^*\\) 만 만족하는 것이 아니므로 일반해(general solution)을 구해야 한다. 일반해를 구하는 방법은 다음과 같이 행렬 \\(\\pmb A\\)의 열들의 선형 조합이 영벡터가 되는 \\(\\pmb x^{**}\\)를 찾는 것이다.\n\\[\n\\pmb A \\pmb x^{**} = \\pmb 0\n\\quad \\leftrightarrow \\quad\nx_1\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\nx_2\n\\begin{bmatrix}\n0  \\\\\n1   \n\\end{bmatrix}\n+ x_3\n\\begin{bmatrix}\n0 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n0 \\\\\n0\n\\end{bmatrix}\n\\tag{5.7}\\]\n식 5.7 를 만족하는 해는 유일하지 않다. 하지만 행렬 \\(\\pmb A\\)의 두 번째 열과 세 번째 열의 부호가 반대인 점을 이용하면 다음과 같은 식을 얻을 수 있다.\n\\[\n(0)\n\\begin{bmatrix}\n1  \\\\\n0  \n\\end{bmatrix}\n+\n(1)\n\\begin{bmatrix}\n0  \\\\\n1   \n\\end{bmatrix}\n+ (1)\n\\begin{bmatrix}\n0 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n0 \\\\\n0\n\\end{bmatrix}\n\\] 따라서 식 5.7 를 만족하는 해 \\(\\pmb x^{**}\\) 는 쉽게 찾을 수 있다.\n\\[ \\pmb x^{**} =\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix}\n\\]\n이제 \\(\\pmb A \\pmb x^{*} = \\pmb y\\) 를 만족하는 특수해 \\(\\pmb x^{*}\\) 와 \\(\\pmb A \\pmb x^{**} = \\pmb 0\\) 를 만족하는 \\(\\pmb x^{**}\\) 를 이용하여 일반해를 구해보자. 임의의 실수 \\(t\\) 에 대하여 다음과 같은 식이 만족한다.\n\\[ \\pmb A (\\pmb x^* + t \\pmb x^{**})  =\n\\pmb A \\pmb x^* + t \\pmb A \\pmb x^{**}\n= \\pmb y + t \\pmb 0 = \\pmb y \\quad  t \\in \\RR\\]\n위의 식에 의하여 이제 일반해를 구하면 다음과 같이 나타나며 이는 매개변수를 이용하여 얻은 해(식 5.4)와 동일하게 나타난다.\n\\[\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3\n\\end{bmatrix}\n=\n\\pmb x^* + t \\pmb x^{**}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}+\nt\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix},\n\\quad t \\in \\RR\n\\]\n(3) (-1)-추가법\n이제 마지막 방법은 부교재 2.3.3 절(32 페이지)에 나온 (-1)-추가법(Minus-1 Trick)에 대하여 배워보자.\n식 5.3 는 기약행사다리꼴 행렬로서 첫 번째 행과 두 번째 행이 피봇을 포함한 행이다. 이제 기약행사다리꼴 행렬에 대각원소 위치에 피봇이 없는 행에 대각원소가 -1 인 행을 추가하여 정방행렬로 만들어 보자. 식 5.3 에서 3행에 피봇이 없으므로 대각원소가 -1 이고 나머지가 0인 행을 3행에 다음과 같이 추가한다.\n\\[\n\\left[\\begin{array}{ccc|c}\n1 & 0 & 0 & 10\\\\\n0 & 1  & -1 & 2 \\\\\n\\color{red}{0} &  \\color{red}{0} & \\color{red}{-1} & \\color{red}{0}\n\\end{array}\\right]\n\\tag{5.8}\\]\n이제 식 5.8 에서 가장 오른 쪽에 있는 열이 특수해가 되며 대각원소가 -1 은 열벡터가 \\(\\pmb A \\pmb x = \\pmb 0\\) 을 만족하는 해가 된다.\n따라서 방정식의 일반해를 다음과 같이 쓸수 있다.\n\\[\n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\nx_3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}+\nt^*\n\\begin{bmatrix}\n0 \\\\\n-1 \\\\\n-1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n10 \\\\\n2 \\\\\n0\n\\end{bmatrix}+\nt\n\\begin{bmatrix}\n0 \\\\\n1 \\\\\n1\n\\end{bmatrix},\n\\quad t=-t^*, ~~ t \\in \\RR\n\\]",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>가우스소거법과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/05_matrix_equation.html#영공간과-일반해",
    "href": "qmds/05_matrix_equation.html#영공간과-일반해",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.4 영공간과 일반해",
    "text": "5.4 영공간과 일반해\n식 5.7 에 나타난 것과 같이 주어진 행렬 \\(\\pmb A\\) 의 열들의 선형조합을 영벡터로 만드는 해의 집합을 영공간(Null space)라고 한다.\n\n정의 5.1 일차연립방정식(또는 행렬 방정식) \\(\\pmb A \\pmb x = \\pmb 0\\) 의 해집합을 \\(\\pmb A\\)의 영공간이라고 하고 \\(N (\\pmb A)\\)라고 표시한다. 즉,\n\\[ N( \\pmb A)=\\{ \\pmb x: \\pmb A \\pmb x= \\pmb 0 \\}\\]\n\n위에서 방정식의 해를 찾을 때 특수한 해를 먼저 찾고 일반해를 만드는 작업은 영공간을 찾는 작업과 동일하다.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>가우스소거법과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/05_matrix_equation.html#중요한-내용과-정의",
    "href": "qmds/05_matrix_equation.html#중요한-내용과-정의",
    "title": "5  가우스소거법과 연립방정식의 해",
    "section": "5.5 중요한 내용과 정의",
    "text": "5.5 중요한 내용과 정의\n\n행사다리꼴 행렬(row echelon form)의 정의\n피벗(pivot 혹은 leading entry)의 정의\n기약행사다리꼴(reduced row echelon form)의 정의\n가우스 소거법의 절차\n\n기본변수(basic variable)와 자유변수(free variable)\n매개변수의 이용\n\n연립일차방정식이 유일한 해를 가질 조건\n정방행렬의 역행령이 존재하면 영공간은 영벡터와 같다.\n\n\n\n\n\nDeisenroth, Marc Peter, A Aldo Faisal, 와/과 Cheng Soon Ong. 2020. Mathematics for machine learning. Cambridge University Press.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>가우스소거법과 연립방정식의 해</span>"
    ]
  },
  {
    "objectID": "qmds/06_matrix_inverse_2.html#역행렬의-공식",
    "href": "qmds/06_matrix_inverse_2.html#역행렬의-공식",
    "title": "6  행연산 행렬과 역행렬",
    "section": "6.1 역행렬의 공식",
    "text": "6.1 역행렬의 공식\n먼저 \\(2 \\times 2\\) 행렬의 역행렬을 구하는 공식을 이용해 보자. 다음과 같이 \\(2 \\times 2\\) 행렬 \\(\\pmb A\\) 가 주어졌을 때\n\\[\n\\pmb  A =\n\\begin{bmatrix}\n1 & 2 \\\\\n3 & 4\n\\end{bmatrix}\n\\]\n식 4.1 를 사용하면 다음과 같이 \\(2 \\times 2\\) 행렬의 역행렬을 구할 수 있다.\n\\[ \\pmb A^{-1} = \\frac{1}{(1)(4)-(2)(3) }\n\\begin{bmatrix}\n4 & -2 \\\\\n-3 & 1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n-2 & 1 \\\\\n3/2 & -1/2\n\\end{bmatrix}\n\\]",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>행연산 행렬과 역행렬</span>"
    ]
  },
  {
    "objectID": "qmds/06_matrix_inverse_2.html#행연산과-역행렬",
    "href": "qmds/06_matrix_inverse_2.html#행연산과-역행렬",
    "title": "6  행연산 행렬과 역행렬",
    "section": "6.2 행연산과 역행렬",
    "text": "6.2 행연산과 역행렬\n아래에 주어진 두 예제에서 행연산을 이용하여 역행렬을 구해보자.\n\n예제 6.1 (\\(2 \\times 2\\) 행렬의 역행렬) 정방행렬의 역행렬을 구하는 다른 방법 중의 하나는 항등행렬 \\(\\pmb I\\) 와 같이 첨가행렬을 만들고 행연산을 적용하는 것이다. 이제 행연산을 이용하여 \\(\\pmb A\\) 의 역행렬을 구하는 방법을 연습해 보자\n이제 \\(\\pmb A\\) 과 이차원 항등행렬 \\(\\pmb I\\) 을 붙여서 만든 첨가행렬은 다음과 같다.\n\\[\n[ ~\\pmb A ~|~ \\pmb I ~]=\n\\left[\\begin{array}{cc|cc}\n1 & 2 & 1 & 0\\\\\n3 & 4  & 0 & 1\n\\end{array}\\right]\n\\]\n이제 위의 첨가행렬에서 행연산을 이용하여 행렬 \\(\\pmb A\\) 부분을 항등행렬로 만들어 보자.\n\\[\n\\begin{aligned}\n&\n\\left[\\begin{array}{cc|cc}\n1 & 2 &  1 & 0\\\\\n3 & 4 & 0 & 1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n(-3)(\\text{1st row}) + (\\text{2nd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cc|cc}\n1 & 2  & 1 & 0\\\\\n0 & -2 & -3 & 1\n\\end{array}\\right]  \n\\begin{array}{c}\n(1)(\\text{2nd row}) + (\\text{1st row})\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cc|cc}\n1 & 0  & -2 & 1\\\\\n0 & -2 & -3 & 1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n(-1/2) (\\text{2nd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cc|cc}\n1 & 0  & -2 & 1\\\\\n0 & 1 & 3/2 &-1/2\n\\end{array}\\right]\n\\end{aligned}\n\\]\n이렇게 첨가행렬에서 행렬 \\(\\pmb A\\) 부분을 행연산을 이용하여 항등행렬로 만들어 주면 오른쪽의 항등행렬이 \\(\\pmb A^{-1}\\)로 나타난다.\n\\(\\blacksquare\\)\n\n\n예제 6.2 (\\(4 \\times 4\\) 행렬의 역행렬) \\[ \\pmb A =\n\\begin{bmatrix}\n1 & 0 & 1 & 0 \\\\\n0 & 1 & 1 & 0 \\\\\n1 & 1 & 0 & 1 \\\\\n1 & 1 & 1 & 0\n\\end{bmatrix}\n\\]\n첨가행렬에서 행연산을 이용하여 행렬 \\(\\pmb A\\) 부분을 항등행렬로 만들어 보자.\n\\[\n\\begin{aligned}\n& \\left[\\begin{array}{cccc|cccc}\n1 & 0 & 1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 1 & 0 & 0 & 1 & 0 & 0\\\\\n1 & 1 & 0 & 1 & 0 & 0 & 1 & 0\\\\\n1 & 1 & 1 & 0 & 0 & 0 & 0 & 1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n\\\\\n(-1)(\\text{1st row}) + (\\text{3nd row}) \\\\\n(-1)(\\text{1st row}) + (\\text{4th row})\n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 1 & 0 & 0 & 1 & 0 & 0\\\\\n0 & 1 & -1 & 1 & -1 & 0 & 1 & 0\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n\\text{swap with 2nd and 4th row} \\\\\n\\\\\n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1 \\\\\n0 & 1 & -1 & 1 & -1 & 0 & 1 & 0\\\\\n0 & 1 & 1 & 0 & 0 & 1 & 0 & 0\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n\\\\\n(-1)(\\text{2nd row}) + (\\text{3rd row}) \\\\\n(-1)(\\text{2nd row}) + (\\text{4th row})\n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 1 & 0 & 1 & 0 & 0 & 0\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1 \\\\\n0 & 0 & -1 & 1 & 0 & 0 & 1 & -1\\\\\n0 & 0 & 1 & 0 & 1 & 1 & 0 & -1\n\\end{array}\\right]  \n\\begin{array}{c}\n(-1)(\\text{4th row}) + (\\text{1st row})  \\\\\n\\\\\n\\\\\n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 0 & 0 & 0 & -1 & 0 & 1\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1 \\\\\n0 & 0 & -1 & 1 & 0 & 0 & 1 & -1\\\\\n0 & 0 & 1 & 0 & 1 & 1 & 0 & -1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n\\\\\n\\\\\n\\text{swap with 3rd and 4th row}  \n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 0 & 0 & 0 & -1 & 0 & 1\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1 \\\\\n0 & 0 & 1 & 0 & 1 & 1 & 0 & -1 \\\\\n0 & 0 & -1 & 1 & 0 & 0 & 1 & -1\n\\end{array}\\right]  \n\\begin{array}{c}\n\\\\\n\\\\\n\\\\\n(-1)(\\text{3rd row}) + (\\text{4th row})\n\\end{array}  \\\\\n& \\\\\n\\rightarrow &\n\\left[\\begin{array}{cccc|cccc}\n1 & 0 & 0 & 0 & 0 & -1 & 0 & 1\\\\\n0 & 1 & 0  & 0 & -1 & 0 & 0 & 1 \\\\\n0 & 0 & 1 & 0 & 1 & 1 & 0 & -1 \\\\\n0 & 0 & 0 & 1 & 1 & 1 & 1 & -2\n\\end{array}\\right]  \n\\end{aligned}\n\\]\n위의 마지막 결과로 다음과 같은 역행렬이 얻어진다.\n\\[\n\\pmb A^{-1} =\n\\begin{bmatrix}\n0 & -1 & 0 & 1\\\\\n-1 & 0 & 0 & 1 \\\\\n1 & 1 & 0 & -1 \\\\\n1 & 1 & 1 & -2\n\\end{bmatrix}\n\\]\n\\(\\blacksquare\\)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>행연산 행렬과 역행렬</span>"
    ]
  },
  {
    "objectID": "qmds/07_vector_space.html#벡터공간의-정의와-의미",
    "href": "qmds/07_vector_space.html#벡터공간의-정의와-의미",
    "title": "7  벡터공간",
    "section": "7.1 벡터공간의 정의와 의미",
    "text": "7.1 벡터공간의 정의와 의미\n벡터공간(vector space) 은 어떤 집합 \\(S\\) 에 다음과 같은 두 개의 연산이 정의된 공간을 말한다.\n\n두 개의 원소에 대한 더하기(addition, \\(+\\)) 연산의 정의되어 있다.\n\\[+ ~ ~ : S + S \\rightarrow  S \\tag{7.1}\\]\n하나의 실수와 한 개의 원소에 대한 스칼라곱(scalar product, \\(\\cdot\\)) 연산이 정의되어 있다.\n\\[\\cdot ~ ~ : \\RR \\cdot S \\rightarrow  S \\tag{7.2}\\]\n\n위에서 더하기 연산이 정의되어 있다는 의미는 다음에 주어진 규칙이 성립한다는 의미이다.\n\n집합 \\(S\\) 가 연산에 대하여 닫혀있다 (closure).\n\n\\[  s_1 + b \\in S \\quad \\forall s_1,b \\in S \\]\n\n결합법칙이 성립한다 (Associativity).\n\n\\[  (s_1 + s_2) + s_3 = s_1 + (s_2 +s_3)  \\quad \\forall s_1,s_2,s_3 \\in S \\]\n\n항등원이 존재한다 (Neutral element).\n\n\\[  s + e = e + s = s \\quad \\exists e ~~\\forall s \\in S \\]\n\n역원이 존재한다 (Inverse element).\n\n\\[ s + i = i  + s = 0 \\quad \\exists i ~~\\ \\forall s \\in S \\]\n일반적으로 항등원(\\(e\\)) 는 \\(0\\) 으로 표시하며 역원(\\(i\\)) 는 \\(-s\\) 로 표시한다.\n\n교환법칙이 성립한다 (Commutativity).\n\n\\[  s_1 + s_2 = s_2 + s_1  \\quad \\forall s_1,s_2 \\in S \\]\n또한 위에서 스칼라곱 연산이 정의되어 있다는 의미는 다음에 주어진 규칙이 성립한다는 의미이다.\n\n스칼라곱 연산의 분배법칙이 성립한다 (Distributivity).\n\n\\[  r_1(s_1+s_2) = r_1 s_1 + r_2 s_2,~~~ (r_1+r_2)s = r_1 s + r_2 s  \\quad \\forall s_1,s_2 \\in S, ~~ \\forall r_1,r_2 in \\RR \\]\n\n스칼라곱 연산의 결합법칙이 성립한다\n\n\\[  r_1(r_2s) = (r_1 r_2) s  \\quad \\forall s \\in S, ~~ \\forall r_1,r_2 in \\RR \\]\n\n스칼라곱 연산의 항등원이 존재한다 (Neutral element).\n\n\\[  1 \\cdot s  = s \\quad \\forall s \\in S \\]\n일반적으로 벡터공간은 \\((S,+,f)\\) 라고 표시한다. 이러한 표시에서 함수 \\(f\\) 는 스칼라곱 연산에 대한 정의를 나타내는 것이며 식 7.2 에 나타나는 대응을 의미한다.\n이 강좌에서는 스칼라로 실수만 사용하고 있으므로 벡터공간을 실벡터(real vector space) 라고 부른다.\n\\[ f : \\RR \\cdot S \\rightarrow  S, \\quad \\text{즉} \\quad f(rs) = r \\cdot s =rs \\]\n\n\n\n\n\n\n주의\n\n\n\n벡터 공간에서 주의할 점은 두 벡터의 곱하기 가 정의되어 있다는 것이 아니라 하나의 스칼라와 하나의 벡터에 대한 스칼라 곱하기가 정의되어 있다는 것이다.\n\\[\n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n\\cdot\n\\begin{bmatrix}\n3 \\\\\n4\n\\end{bmatrix}\n=?\n\\quad {but} \\quad\n3 \\cdot\n\\begin{bmatrix}\n1 \\\\\n2\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n3 \\\\\n6\n\\end{bmatrix}\n\\]\n두 벡터의 곱하기 는 나중에 내적(inner product) 란 이름으로 따로 정의한다.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>벡터공간</span>"
    ]
  },
  {
    "objectID": "qmds/07_vector_space.html#중요한-내용과-정의",
    "href": "qmds/07_vector_space.html#중요한-내용과-정의",
    "title": "7  벡터공간",
    "section": "7.2 중요한 내용과 정의",
    "text": "7.2 중요한 내용과 정의\n\n벡터공간의 예제 (슬라이드 참조)\n부분공간(subspace)의 정의와 예제(부교재 39 페이지 Example 2.12 참조)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>벡터공간</span>"
    ]
  },
  {
    "objectID": "qmds/08_vector_space_base.html#벡터의-일차독립",
    "href": "qmds/08_vector_space_base.html#벡터의-일차독립",
    "title": "8  벡터공간의 기저와 차원",
    "section": "8.1 벡터의 일차독립",
    "text": "8.1 벡터의 일차독립\n벡터공간에 속한 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\) 의 일차결합(또는 선형결합, linear combination)이란 각 벡터에 스칼라를 곱하여 더한 것들이다. 즉 다음과 같은 형태의 식을 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\)의 일차결합(linear combination)이라고 한다:\n\\[ r_1 \\pmb v_1 + r_2 \\pmb v_2 + \\cdots + r_n \\pmb v_n, \\quad r_1,r_2,\\dots, r_n \\in \\RR  \\tag{8.1}\\]\n\n정의 8.1 (벡터의 일차독립과 일차종속) 벡터공간에 속한 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\) 가 있다고 하자. 만약 다음 식이 만약 모두 \\(0\\)인 \\(n\\)개의 스칼라 \\(x_1,x_2,\\dots,x_n\\)에 대해서만 성립하면 \\(n\\)개 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\) 들은 일차독립(linearly independent)라고 한다.\n\\[\nx_1 \\pmb v_1 + x_2 \\pmb v_2 + \\dots + x_n \\pmb v_n = \\pmb 0 \\quad \\Longleftrightarrow\nx_1 = x_2 = \\dots = x_n =0\n\\tag{8.2}\\]\n또한 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\) 가 일차독립이 아니면 일차종속(linear dependent)라고 한다. 벡터 \\(\\pmb v_1, ~~ \\pmb v_2, ~~\\dots ~~, \\pmb v_n\\) 가 일차종속이면 모두 0이 아닌 \\(x_1,x_2,\\dots,x_n\\) 이 존재하여 다음이 성립한다는 것이다.\n\\[\n\\exists~ x_1,x_2,\\dots,x_n \\in \\RR \\text{ s.t. } (x_1,x_2,\\dots,x_n) \\ne \\pmb 0,\\quad  \\pmb v_1 + x_2 \\pmb v_2 + \\dots + x_n \\pmb v_n = \\pmb 0\n\\tag{8.3}\\]\n\\(\\blacksquare\\)\n\n예를 들어 다음과 같이 주어진 3개의 3-차원 벡터들은 선형종속이다.\n\\[\n\\pmb v_1 =\n\\begin{bmatrix}\n1\\\\\n2\\\\\n3\n\\end{bmatrix},\n\\quad\n\\pmb v_2 =\n\\begin{bmatrix}\n1\\\\\n0\\\\\n1\n\\end{bmatrix},\n\\quad\n\\pmb v_3 =\n\\begin{bmatrix}\n3\\\\\n2\\\\\n5\n\\end{bmatrix}\n\\tag{8.4}\\]\n왜냐하면 다음과 같이 모두 0이 아닌 스칼라에 의해서 다음 식이 성립하기 떄문이다. 즉 벡터 \\(\\pmb v_3\\)는 \\(\\pmb v_2\\) 에 2를 곱하여 \\(\\pmb v_1\\)에 더한 값과 같다.\n\\[\n\\pmb v_3 = \\pmb v_1 + 2 \\pmb v_2 \\quad \\Longleftrightarrow \\quad    \\pmb v_1 + 2 \\pmb v_2 -\\pmb v_3 = 0\n\\] 주어진 벡터들이 서로 일차독립임을 확인할 수 있는 일반적인 방법은 다음과 같이 가우스소거법을 이용하는 것이다.\n\n주어진 벡터들을 열로 구성하는 행렬을 만들고 가우스소거법(또는 행사다리꼴)을 적용한다.\n이때 피봇을 포함하는 열의 개수가 선형독립인 벡터의 개수이다.\n\n다음과 같이 식 8.4 의 3개의 벡터를 각 열로 합친 \\(3 \\times 3\\)-차원 행렬에 행연산을 적용하여 피봇이 1인 행사다리꼴을 만들어보자.\n\\[\n\\begin{aligned}\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n2 & 0 & 2 \\\\\n3 & 1 & 5 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-2)(\\text{1st row}) + (\\text{2nd row}) \\\\\n(-3)(\\text{1st row}) + (\\text{3rd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & -2 & -4 \\\\\n0 & -2 & -4  \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(-1)(\\text{2nd row}) + (\\text{3rd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & -2 & -4 \\\\\n0 & 0 & 0  \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-1/2)(\\text{2nd row})  \\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3\\\\\n0 & 1 & 2\\\\\n0 & 0 & 0 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n(-1)(\\text{2nd row}) + (\\text{1st row})  \\\\\n\\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n\\color{red}{1} & 0 & 1\\\\\n0 & \\color{red}{1} & 2\\\\\n0 & 0 & 0 \\\\\n\\end{bmatrix}\n\\end{aligned}\n\\] 위에서 마지막 행렬의 비봇(빨간 숫자 1)을 포함한 열은 첫 번째 열과 두 번째 열이고 세 번째 열은 첫 번째 열과 두 번째 열의 선형조합으로 나타낼 수 있음을 보여주고 있다. 피봇을 포함하지 않는 세번 째 열의 숫자가 각각 1 과 2라는 것은 세 번째 벡터 \\(\\pmb v_3=(1)\\pmb v_1 + (2) \\pmb v_2\\) 로 나타날 수 있다는 것을 보여준다.\n이제 다음과 같이 주어진 3개의 3-차원 벡터들은 일차독립이다. 즉 3개 벡터의 선형 조합이 0이 될 수 있도록 만드는 스칼라는 모두 0인 경우 밖에 없다.\n\\[\n\\pmb v_1 =\n\\begin{bmatrix}\n1\\\\\n2\\\\\n3\n\\end{bmatrix},\n\\quad\n\\pmb v_2 =\n\\begin{bmatrix}\n1\\\\\n0\\\\\n1\n\\end{bmatrix},\n\\quad\n\\pmb v_3 =\n\\begin{bmatrix}\n3\\\\\n2\\\\\n4\n\\end{bmatrix}\n\\tag{8.5}\\]\n이제 식 8.5 의 3개의 벡터를 각 열로 합친 \\(3 \\times 3\\)-차원 행렬에 행연산을 적용하여 피봇이 1인 행사다리꼴을 만들어보자.\n\\[\n\\begin{aligned}\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n2 & 0 & 2 \\\\\n3 & 1 & 4 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-2)(\\text{1st row}) + (\\text{2nd row}) \\\\\n(-3)(\\text{1st row}) + (\\text{3rd row}) \\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & -2 & -4 \\\\\n0 & -2 & -5  \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(-1)(\\text{2nd row}) + (\\text{3rd row}) \\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & -2 & -4 \\\\\n0 & 0 & -1  \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-1/2)(\\text{2nd row})  \\\\\n(-1)(\\text{3rd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3\\\\\n0 & 1 & 2\\\\\n0 & 0 & 1 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n(-1)(\\text{2nd row}) + (\\text{1st row})  \\\\\n(-2)(\\text{3rd row}) + (\\text{2nd row})\n\\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 0 & 1\\\\\n0 & 1 & 0\\\\\n0 & 0 & 1 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n(-1)(\\text{3rd row}) + (\\text{1st row})  \\\\\n\\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n\\color{red}{1} & 0 & 0\\\\\n0 & \\color{red}{1} & 0\\\\\n0 & 0 & \\color{red}{1} \\\\\n\\end{bmatrix}\n\\end{aligned}\n\\] 식 8.5 의 3개의 벡터로 구성된 행렬에 가우스 소거법을 적용하면 위와 같이 모든 열이 피봇을 포함한 열로 나타난다. 따라서 3개의 벡터는 서로 일차독립이다.\n이제 다음과 같이 주어진 4개의 3-차원 벡터들은 일차종속이다.\n\\[\n\\pmb v_1 =\n\\begin{bmatrix}\n1\\\\\n2\\\\\n3\n\\end{bmatrix},\n\\quad\n\\pmb v_2 =\n\\begin{bmatrix}\n1\\\\\n0\\\\\n1\n\\end{bmatrix},\n\\quad\n\\pmb v_3 =\n\\begin{bmatrix}\n3\\\\\n2\\\\\n4\n\\end{bmatrix}\n\\quad\n\\pmb v_4 =\n\\begin{bmatrix}\n0\\\\\n0\\\\\n1\n\\end{bmatrix}\n\\tag{8.6}\\]\n식 8.6 에 나타난 4개의 벡터가 일차종속임을 어떻게 알 수 있을까? 앞에서와 마찬가지로 식 8.6 에 있는 4개의 벡터들이 열로 구성된 \\(3 \\times 4\\)-행렬에 가우스소거법을 적용해보자.\n\\[\n\\begin{aligned}\n&\n\\begin{bmatrix}\n\\pmb v_1 & \\pmb v_2 & \\pmb v_3 & \\pmb v_4\n\\end{bmatrix}\n\\\\\n=\n&\n\\begin{bmatrix}\n1 & 1 & 3 & 0\\\\\n2 & 0 & 2 & 0\\\\\n3 & 1 & 4 & 1\\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-2)(\\text{1st row}) + (\\text{2nd row}) \\\\\n(-3)(\\text{1st row}) + (\\text{3rd row}) \\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 & 0\\\\\n0 & -2 & -4 & 0\\\\\n0 & -2 & -5 & 1 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(-1)(\\text{2nd row}) + (\\text{3rd row}) \\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 1 & 3 & 0\\\\\n0 & -2 & -4 & 0\\\\\n0 & 0 & -1 & 1 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n(1/2)(\\text{2nd row}) + (\\text{1st row}) \\\\\n\\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 0 & 1 & 0\\\\\n0 & -2 & -4 & 0\\\\\n0 & 0 & -1 & 1 \\\\\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-1/2)(\\text{2nd row}) \\\\\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 0 & 1 & 0\\\\\n0 & 1 & 2 & 0\\\\\n0 & 0 & -1 & 1 \\\\\n\\end{bmatrix}\n\\end{aligned}\n\\]\n위와 같이 가우스소거법을 적용하여 얻은 행렬에서 피봇을 포함한 열은 1,2,4, 번쨰 열이고 포함하지 않은 열은 3번째 열임을 알 수 있다. 여기서 주어진 벡터들로 행렬을 구성할 때 기약행사다리꼴의 형태가 벡터들을 배열하는 순서에 따라 달라지는 것을 알 수 있다. 즉, \\(3 \\times 4\\)-행렬을 구성할 때 순서를 바꾸어 다음과 같이 \\([\\pmb v_1 , \\pmb v_2 , \\pmb v_4, \\pmb v_3]\\) 로 배열하면 다음과 같은 기약행사다리꼴의 형태가 얻어진다.\n\\[\n\\begin{bmatrix}\n\\pmb v_1 & \\pmb v_2 & \\pmb v_4 & \\pmb v_3\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 1 & 0 & 3\\\\\n2 & 0 & 0 & 2\\\\\n3 & 1 & 1 & 4\\\\\n\\end{bmatrix}\n\\rightarrow_{\\text{가우스소거법}} \\rightarrow\n\\begin{bmatrix}\n\\color{red}{1} & 0 & 0 & 1 \\\\\n0 & \\color{red}{1} & 0 & 2 \\\\\n0 & 0 &  \\color{red}{1} & -1  \n\\end{bmatrix}\n\\] 위와 같이 피봇이 1인 기약행사다리꼴에서 식 8.6 의 벡터 \\(\\pmb v_3\\)가 나머지 3개의 벡터의 선형조합으로 표현될 수 있다는 의미이다. 따라서 식 8.6 의 벡터는 일차종속이며 기약행사다리꼴의 마지막 열에 나타나 숫자 \\((1,2,-1)\\)은 \\(\\pmb v_3\\) 가 다음과 같이 다른 벡터의 일차결합으로 나타난는 것을 보여준다.\n\\[ \\pmb v_3 = \\begin{bmatrix}\n3\\\\\n2\\\\\n4\n\\end{bmatrix}\n= (1)\\pmb v_1 +  (2)\\pmb v_2 +  (-1)\\pmb v_4\n= (1)\n\\begin{bmatrix}\n1\\\\\n2\\\\\n3\n\\end{bmatrix}\n+\n(2)\n\\begin{bmatrix}\n1\\\\\n0\\\\\n1\n\\end{bmatrix}\n+\n(-1)\\begin{bmatrix}\n0\\\\\n0\\\\\n1\n\\end{bmatrix}\n\\]\n식 8.6 와 같이 3차원 벡터가 4개인 경우 벡터의 값에 관계없이 일차종속으로 나타난다. 이러한 사실은 \\(\\RR^n\\)의 \\(n+1\\) 개의 벡터는 항상 일차종속이라는 정리(슬라이드 6페이지의 정리 참조)의 결과이다. 즉, \\(\\RR^n\\)에서 \\(n\\)개보다 더 많은 벡터들은 항상 일차종속이다.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>벡터공간의 기저와 차원</span>"
    ]
  },
  {
    "objectID": "qmds/08_vector_space_base.html#생성집합과-기저",
    "href": "qmds/08_vector_space_base.html#생성집합과-기저",
    "title": "8  벡터공간의 기저와 차원",
    "section": "8.2 생성집합과 기저",
    "text": "8.2 생성집합과 기저\n\n정의 8.2 (생성집합과 기저) 벡터공간 \\(V\\) 의 벡터 \\(\\pmb v_1,\\pmb v_n, \\dots, \\pmb v_m\\) 의 일차결합을 모두 모은 집합\n\\[ W = span\\{\\pmb v_1,\\pmb v_2, \\dots, \\pmb v_m \\} = \\{r_1\\pmb v_1 + r_2 \\pmb v_2 + \\cdots+ r_m \\pmb v_m:\nr_1,r_2,\\dots,r_m \\in \\RR \\}\\]\n을 벡터 \\(\\pmb v_1,\\pmb v_n, \\dots, \\pmb v_m\\) 의 생성(span)이라고 하며 \\(W\\) 의 생성집합(generating set, spanning set) 이라고 한다.\n또한 어떤 벡터공간(혹은 부분공간)의 생성집합에 속한 벡터들이 일차독립일 때 이 생성집합을 기저 (basis)라고 한다\n\\(\\blacksquare\\)",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>벡터공간의 기저와 차원</span>"
    ]
  },
  {
    "objectID": "qmds/08_vector_space_base.html#중요한-내용과-정의",
    "href": "qmds/08_vector_space_base.html#중요한-내용과-정의",
    "title": "8  벡터공간의 기저와 차원",
    "section": "8.3 중요한 내용과 정의",
    "text": "8.3 중요한 내용과 정의\n\n\\(\\RR^n\\) 의 모든 기저는 \\(n\\)개의 원소를 갖는다.\n임의의 벡터공간 \\(V\\)에 대해서 \\(V\\)의 부분집합 \\(B = \\{\\pmb b_1,\\dots,\\pmb b_n\\}\\) 가 \\(V\\)의 한 기저라고 하면 다음을 보일 수 있다.\n\n\\(V\\) 의 모든 벡터들은 \\(\\pmb b_1,\\dots,\\pmb b_n\\) 의 일차결합으로 나타낼 수 있으며 유일하다.\n\\(V\\) 의 부분집합이 \\(n\\) 개보다 많은 벡터를 포함하면 이 부분집합의 벡터들은 일차종속이다.\n\\(V\\) 의또다른기저 \\(C=\\{\\pmb c_1,\\dots,\\pmb c_m \\}\\) 가있다면\\(m=n\\) 이다.\n\n벡터공간 \\(V\\)의 차원(dimension) 은 기저의 개수로 정의되며 \\(dim(V)\\)로 표시한다.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>벡터공간의 기저와 차원</span>"
    ]
  },
  {
    "objectID": "qmds/09_matrix_rank.html#계수의-정의",
    "href": "qmds/09_matrix_rank.html#계수의-정의",
    "title": "9  행렬의 계수",
    "section": "9.1 계수의 정의",
    "text": "9.1 계수의 정의\n\n정의 9.1 (계수의 정의) 행렬의 계수(rank)란 행렬의 일차 독립인 행들의 최대 수 또는 일차독립인 열들의 최대 수로 정의된다\n\\[ rank(\\pmb A) = rk(\\pmb A) = dim(Col(\\pmb A)) = dim(Row(\\pmb A)) \\] \\(\\blacksquare\\)\n\n꼭 기억해야 할 것은 행렬의 계수는 열들을 이용하여 구한 계수와 행들을 이용하여 구한 계수가 같다는 것이다. 즉, 행렬의 계수는 열의 계수와 행의 계수 중 하나만 구해도 된다는 것이다.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>행렬의 계수</span>"
    ]
  },
  {
    "objectID": "qmds/09_matrix_rank.html#중요공식",
    "href": "qmds/09_matrix_rank.html#중요공식",
    "title": "9  행렬의 계수",
    "section": "9.2 중요공식",
    "text": "9.2 중요공식\n\n\\(rank(\\pmb A ) = rank(\\pmb A^T)\\)\n행렬 \\(\\pmb A \\in \\RR^n\\) 가 정방행렬이고 계수가 \\(n\\) 이면 역행렬이 존재한다. 약행렬이 존재하면 정칙행렬(non-sigular matrix)이라고 한다.\n더 나아가 다음에 나오는 문장은 모두 동치(equaivalent)이다.\n모든 \\(\\pmb A \\in \\RR^{n \\times n}\\) 에 대하여\n\\(\\pmb A\\) 가 정칙행렬이다.\n\\(\\quad \\Leftrightarrow\\) \\(\\pmb A\\) 의 열들이 일차독립이다.\n\\(\\quad \\Leftrightarrow\\) \\(\\pmb A\\) 의 행들이 일차독립이다.\n\\(\\quad \\Leftrightarrow\\) \\(\\pmb A\\) 의 계수가 \\(n\\) 이다.\n\\(\\quad \\Leftrightarrow\\) \\(\\pmb A\\) 의 기약행사다리꼴행렬이 항등행렬이다.\n\\(\\quad \\Leftrightarrow\\) \\(\\pmb A \\pmb x = \\pmb 0\\) 해는 영벡터가 유일하다.\n최대계수행렬\n\n\\(\\pmb A \\in \\RR^{n \\times n}\\) 에 대하여 \\(m \\le n\\) 이고 \\(rank(\\pmb A) = m\\)이면 \\(\\pmb A\\) 는 최대 행계수를 갖는다. 이 때 \\(\\pmb A\\)를 최대 행계수 행렬(full row rank matrix)이라고한다.\n\\(\\pmb A \\in \\RR^{n \\times n}\\) 에 대하여 \\(m \\le n\\) 이고 \\(m \\ge n\\)이고 \\(rank(\\pmb A) = n\\) 이면 \\(\\pmb A\\)는 최대 열계수를 갖는다 A는 최대 열계수 행렬이다라고 한다.이 때 \\(\\pmb A\\)를 최대 열계수행렬((full column rank matrix)이라고 한다.\n\\(\\pmb A\\) 가 최대 행계수 행렬 또는 최대 열계수 행렬인 경우 \\(\\pmb A\\) 는 최대 계수를 갖는다 또는 \\(\\pmb A\\) 는 최대 계수 행렬(full rank matrix) 이라고 한다.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>행렬의 계수</span>"
    ]
  },
  {
    "objectID": "qmds/09_matrix_rank.html#예제",
    "href": "qmds/09_matrix_rank.html#예제",
    "title": "9  행렬의 계수",
    "section": "9.3 예제",
    "text": "9.3 예제\n\n9.3.1 부교재\n\nExample 2.18 (Rank)\n\n\n\n9.3.2 연습문제 1\n다음과 같은 \\(3 \\times 4\\) 행렬에 행연산을 적용하여 행사다리꼴 행렬로 만들어 보자.\n\\[\n\\pmb A =\n\\begin{bmatrix}\n1 & 2 & 1 & 5\\\\\n2 & 5 & 1 & 14 \\\\\n4 & 9 & 3 & 24\n\\end{bmatrix}\n\\tag{9.1}\\]\n\\[\n\\begin{aligned}\n&\n\\begin{bmatrix}\n1 & 2 & 1 & 5\\\\\n2 & 5 & 1 & 14 \\\\\n4 & 9 & 3 & 24\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-2)(\\text{1st row}) + (\\text{2nd row})\n\\\\\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 2 & 1 & 5\\\\\n0 & 1 & -1 & 4 \\\\\n4 & 9 & 3 & 24\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(-4)(\\text{1st row}) + (\\text{3rd row})\n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&\n\\begin{bmatrix}\n1 & 2 & 1 & 5\\\\\n0 & 1 & -1 & 4 \\\\\n0 & 1 & -1 & 4\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(-1) (\\text{2nd row}) + (\\text{3rd row})  \n\\end{array} \\\\\n& \\\\\n\\rightarrow\n&  \n\\begin{bmatrix}\n1 & 2 & 1 & 5\\\\\n0 & 1 & -1 & 4 \\\\\n0 & 0 & 0 & 0\n\\end{bmatrix}\n\\end{aligned}\n\\]\n위의 결과에서 피봇 행이 2개가 나타나며 나머지 행은 모두 0으로 나타난다. 이러한 결과를 행렬의 계수가 2인 것을 의미하며(\\(rank(\\pmb A)=2\\)). 계수의 정의에 의하여 선형독립인 행의 갯수가 2이다.\n따라서 마지막 행은 다른 2개의 행들의 선형조합이고 행연산의 결과로 모든 원소가 0이 되는 것을 알 수 있다.\n만약 식 9.1 에 나타난 행렬의 열들을 고려하면 선형독립인 열들이 2개가 될까? 식 9.1 의 행렬 \\(\\pmb A\\) 의 전치 행렬은 열들이 행으로 바뀐 행렬이므로 위와 유사하게 행 연산을 적용하면 선향독립인 열의 개수를 구할 수 있다.\n\\[\n\\pmb A^T =\n\\begin{bmatrix}\n1 & 2 & 4 \\\\\n2 & 5 & 9 \\\\\n1 & 1 & 3 \\\\\n5 & 14 & 24\n\\end{bmatrix}\n\\]\n\\[\n\\begin{aligned}\n&\n\\begin{bmatrix}\n1 & 2 & 4 \\\\\n2 & 5 & 9 \\\\\n1 & 1 & 3 \\\\\n5 & 14 & 24\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(\\text{change 1st row and 3rd row})\n\\\\\n\\end{array} \\\\\n\\\\\n\\rightarrow &\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n2 & 5 & 9 \\\\\n1 & 2 & 4 \\\\\n5 & 14 & 24\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-2)(\\text{1st row}) + (\\text{2nd row}) \\\\\n(-1)(\\text{1st row}) + (\\text{3rd row}) \\\\\n(-5)(\\text{1st row}) + (\\text{4th row})\n\\end{array} \\\\\n\\rightarrow &\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & 3 & 3 \\\\\n0 & 1 & 1 \\\\\n0 & 9 & 9\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n\\\\\n(\\text{change 2nd row and 3rd row}) \\\\\n\\\\\n\\end{array} \\\\\n\\rightarrow &\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & 1 & 1 \\\\\n0 & 3 & 3 \\\\\n0 & 9 & 9\n\\end{bmatrix}\n\\begin{array}{c}\n\\\\\n(-1)(\\text{2nd row}) + (\\text{3rd row}) \\\\\n(-3)(\\text{2nd row}) + (\\text{4th row})\n\\\\\n\\end{array} \\\\\n\\rightarrow &\n\\begin{bmatrix}\n1 & 1 & 3 \\\\\n0 & 1 & 1 \\\\\n0 & 0 & 0 \\\\\n0 & 0 & 0\n\\end{bmatrix}\n\\end{aligned}\n\\] 위와 같이 4개의 열로 보아도 서로 독립인 열의 개수는 2개임을 알 수 있다.\n따라서 행렬의 계수를 구하는 경우는 행을 이용한 연산과 열을 이용한 연산 중 하나만 선택하여 계산하면 된다.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>행렬의 계수</span>"
    ]
  },
  {
    "objectID": "qmds/10_linear_map.html#선형사상",
    "href": "qmds/10_linear_map.html#선형사상",
    "title": "10  선형사상",
    "section": "10.1 선형사상",
    "text": "10.1 선형사상\n\\(V\\) 와 \\(W\\) 가 벡터공간일 때 함수 \\(T :V \\rightarrow W\\) 가 다음 두 가지 조건을 만족하면 선형사상(linear mapping, linear transformation, homomorphism)이라고 한다.\n\\[\n\\begin{aligned}\n(1) & \\quad \\forall v_1, v_2 \\in V, \\quad T(v_1 + v_2) = T(v_1) + T(v_2) \\\\\n(2) & \\quad \\forall r \\in \\RR, \\quad T(rv_1) = r T(v_1)\n\\end{aligned}\n\\]\n\n선형사상의 종류와 성질\n\n다음에 나오는 특별한 성질을 가진 선형사상과 특별한 함수의 정의를 반드시 학습하고 암기하세요\n\nInjective(단사함수, one-to-one)\nSurjective(전사함수, onto)\nBijective(전단사함수, one-to-one correspondence)\n항등함수(\\(id_V\\))\n역함수\n\n다음과 같은 용어는 참고로 알아두자.\n\nIsomorphism (동형사상): \\(T : V \\rightarrow W\\) linear and bijective\nAutomorphism (자기동형사상): \\(T : V \\rightarrow V\\) linear and bijective\n\n\n정리 10.1 (동형사상) 한 벡터공간 \\(V\\) 가 있어서 \\(dim(V)=n\\) 이면 동형사상 \\(f :V \\rightarrow \\RR^n\\) 이있다.\n\\(\\blacksquare\\)",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>선형사상</span>"
    ]
  },
  {
    "objectID": "qmds/11_linear_transform.html#좌표",
    "href": "qmds/11_linear_transform.html#좌표",
    "title": "11  선형사상의 변환행렬",
    "section": "11.1 좌표",
    "text": "11.1 좌표\n벡터공간 \\(V\\) 의 차원이 \\(dim(V)=n\\) 이고 주어진 기저를 \\(B = (\\pmb b_1, \\pmb b_2, \\dots, \\pmb b_n)\\) 이라고 하자. 참고로 기저 \\(B\\) 는 순서가 있는 집합(oerdered set)이다.\n벡터공간 \\(V\\) 의 원소 \\(\\pmb x \\in V\\) 는 다음과 같이 기저 \\(B\\) 의 선형조합으로 나타난다,\n\\[ \\pmb x = \\alpha_1 \\pmb b_1 + \\alpha_2 \\pmb b_2 + \\dots + \\alpha_n \\pmb b_n  \\tag{11.1}\\]\n참고로 \\(\\pmb x\\)를 식 11.1 과 같이 나타낼 수 있는 \\(\\alpha_1,\\alpha_2,\\dots,\\alpha_n\\) 의 조합은 유일하다.\n\n정의 11.1 (좌표(coordinator)) 벡터공간 \\(V\\) 의 원소 \\(\\pmb x \\in V\\) 가 기저 \\(B\\) 에 대하여 식 11.1 으로 표현된다면 \\(\\alpha_1,\\alpha_2,\\dots,\\alpha_n\\) 를 \\(\\pmb x\\) 의 좌표(coordinator) 라고 부른다.\n또한 벡터공간 \\(V\\) 의 모든 원소에 대하여 좌표를 대응해주는 좌표사상(coordinator map) 라고 부르고 다음과 같이 함수 \\(f: V \\rightarrow \\RR^n\\) 로 나타낼 수 있다.\n\\[ f(\\pmb x) = \\pmb \\alpha =\n\\begin{bmatrix}\n\\alpha_1 \\\\\n\\alpha_2 \\\\\n\\vdots \\\\\n\\alpha_n\n\\end{bmatrix}\n\\]\n\\(\\blacksquare\\)\n\n\n11.1.1 예제 (부교재 Example 2.20)\n이차원 벡터공간 \\(V = \\RR^2\\) 에서 다음과 같은 하나의 벡터를 생각하자.\n\\[\n\\pmb x =\n\\begin{bmatrix}\n2 \\\\\n3\n\\end{bmatrix}\n\\]\n이제 다음과 같은 표준 기저(standard basis) \\(B = (\\pmb e_1, \\pmb e_2)\\) 를 생각하자.\n\\[ B=  (\\pmb e_1, \\pmb e_2) =\n\\left (\n\\begin{bmatrix}\n1 \\\\\n0\n\\end{bmatrix}\n,\n\\begin{bmatrix}\n0 \\\\\n1\n\\end{bmatrix}\n\\right )\n= \\pmb I\n\\]\n이제 \\(\\pmb x\\) 를 기저 \\(B\\) 에 대하여 식 11.1 으로 표현하면 다음과 같다.\n\\[\n\\pmb x\n=\\begin{bmatrix}\n2 \\\\\n3\n\\end{bmatrix}\n= 2 \\pmb e_1 + 3 \\pmb e_2\n= 2\n\\begin{bmatrix}\n1 \\\\\n0\n\\end{bmatrix}\n+ 3\n\\begin{bmatrix}\n0 \\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0\\\\\n0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n2 \\\\\n3\n\\end{bmatrix}\n=\\pmb B \\pmb \\alpha_B\n\\tag{11.2}\\]\n따라서 기저 \\(B\\) 에 대하여 \\(\\pmb x\\) 의 좌표 \\(\\pmb \\alpha\\)는 다음과 같다.\n\\[\n\\pmb \\alpha \\equiv \\pmb \\alpha_B =\n\\begin{bmatrix}\n2 \\\\\n3\n\\end{bmatrix}\n\\]\n이제 기저를 다음과 같이 \\(\\tilde B\\) 로 바꾸어 보자.\n\\[ \\tilde B=  (\\pmb b_1, \\pmb b_2) =\n\\left (\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n,\n\\begin{bmatrix}\n1 \\\\\n1\n\\end{bmatrix}\n\\right )\n\\]\n이제 \\(\\pmb x\\) 를 기저 \\(\\tilde B\\) 에 대하여 식 11.1 으로 표현하면 다음과 같다.\n\\[\n\\pmb x =\n\\begin{bmatrix}\n2 \\\\\n3\n\\end{bmatrix}\n= (-1/2) \\pmb b_1 + (5/2) \\pmb b_2\n= (-\\frac{1}{2})\n\\begin{bmatrix}\n1 \\\\\n-1\n\\end{bmatrix}\n+ (\\frac{5}{2})\n\\begin{bmatrix}\n1 \\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 1\\\\\n-1 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\n-1/2 \\\\\n5/2\n\\end{bmatrix}\n= \\tilde {\\pmb B}  \\pmb \\alpha_{\\tilde B}\n\\tag{11.3}\\]\n따라서 기저 \\(\\tilde B\\) 에 대하여 \\(\\pmb x\\) 의 좌표 \\(\\pmb \\alpha\\)는 다음과 같다.\n\\[\n\\pmb \\alpha \\equiv \\pmb \\alpha_{\\tilde B} =\n\\begin{bmatrix}\n-\\frac{1}{2} \\\\\n5\n\\end{bmatrix}\n\\]\n\n\n\n기저의 변화에 대한 죄표의 변화\n\n\n이 예제에서 본 것처럼 기저가 변하면 동일한 원소에 대해서도 좌표가 달라진다.\n만약 기저가 변했다면 좌표는 어떻게 변하는지를 알아야 한다. 이차원 공간의 임의의 벡터 \\(\\pmb x\\) 에 대하여 두 기저 \\(B\\) 와 \\(\\tilde B\\) 에 대하여 식 11.2 과 식 11.3 의 관계를 이용하면 다음과 같은 식을 얻을 수 있다.\n\\[\n\\begin{aligned}\n& \\quad \\tilde {\\pmb B}  \\pmb \\alpha_{\\tilde B} = \\pmb B \\pmb \\alpha_B  \\\\\n\\Rightarrow  & \\quad  \\pmb \\alpha_{\\tilde B}  = \\tilde {\\pmb B}^{-1} \\pmb B  \\pmb \\alpha_B  \\\\\n\\Rightarrow &  \\quad   \\pmb \\alpha_{\\tilde B}  =\\tilde {\\pmb B}^{-1} \\pmb I \\pmb \\alpha_B  \\\\\n\\Rightarrow &  \\quad   \\pmb \\alpha_{\\tilde B}  =\\tilde {\\pmb B}^{-1} \\pmb \\alpha_B  \\\\\n\\Rightarrow  & \\quad   \\pmb \\alpha_{\\tilde B}  =\n\\begin{bmatrix}\n1 & 1 \\\\\n-1 & 1\n\\end{bmatrix}^{-1}\n\\pmb \\alpha_B  \\\\\n\\Rightarrow  & \\quad \\pmb \\alpha_{\\tilde B} =\n\\begin{bmatrix}\n1/2 & -1/2 \\\\\n1/2 & 1/2\n\\end{bmatrix}\n\\pmb \\alpha_B\n\\end{aligned}\n\\] 따라서 기저가 변하면 좌표는 위와 같은 식으로 변한다.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>선형사상의 변환행렬</span>"
    ]
  },
  {
    "objectID": "qmds/11_linear_transform.html#변환행렬",
    "href": "qmds/11_linear_transform.html#변환행렬",
    "title": "11  선형사상의 변환행렬",
    "section": "11.2 변환행렬",
    "text": "11.2 변환행렬\n\n11.2.1 정의\n이제 두 개의 벡터공간 \\(V\\) 와 \\(W\\) 에 대하여 선형사상 \\(\\Phi\\) 가 정의되어 있고\n\\[ \\Phi : V \\rightarrow W \\]\n벡터공간 \\(V\\) 와 \\(W\\) 에 대한 기저가 각각 \\(B=(\\pmb b_1, \\pmb b_2, \\dots, \\pmb b_n)\\) 와 \\(C = (\\pmb c_1, \\pmb c_2, \\cdots, \\pmb c_m)\\) 이라고 하자.\n이제 벡터공간 \\(V\\) 의 기저에 대한 선향사상의 원소가 벡터공간 \\(W\\) 의 기저로 다음과 같이 표현된다고 하자.\n\\[\n\\begin{aligned}\n\\Phi(\\pmb b_1) &= a_{11} \\pmb c_1 + a_{21} \\pmb c_2 + \\cdots + a_{m1} \\pmb c_m \\\\\n\\Phi(\\pmb b_2) &= a_{12} \\pmb c_1 + a_{22} \\pmb c_2 + \\cdots + a_{m2} \\pmb c_m \\\\\n\\cdots \\\\\n\\Phi(\\pmb b_n) &= a_{1n} \\pmb c_1 + a_{2n} \\pmb c_2 + \\cdots + a_{mn} \\pmb c_m \\\\\n\\end{aligned}\n\\tag{11.4}\\]\n식 11.4 에서 나타난 계수 \\(a_{ij}\\) 을 \\(m \\times n\\)-행렬 \\(\\pmb A_{\\Phi}\\) 로 다음과 같이 표현할 수 있다.\n\\[\n\\pmb A_{\\Phi} =\n\\begin{bmatrix}\na_{11} & a_{12} & \\cdots & a_{1n} \\\\\na_{21} & a_{22} & \\cdots & a_{2n} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\na_{m1} & a_{m2} & \\cdots & a_{mn} \\\\\n\\end{bmatrix}\n\\tag{11.5}\\]\n식 11.4 에 나타난 행렬 \\(\\pmb A_{\\Phi}\\) 를 변환행렬(transformation matrix)이라고 부르며 이 변환행렬은 각 벡터공간의 기저 \\(B\\) 와 \\(C\\)에 따라 정의되는 것에 유의하자.\n\n\n11.2.2 좌표와 변환행렬\n만약 \\(\\hat {\\pmb x}\\) 가 벡터공간 \\(V\\) 에서 기저 \\(B\\) 에 대한 원소 \\(\\pmb x\\)의 좌표이고\n\\[ \\pmb x = \\pmb B \\hat {\\pmb x} \\]\n\\(\\hat {\\pmb y}\\) 가 벡터공간 \\(W\\) 에서 기저 \\(C\\) 에 대한 선형사상 \\(\\pmb y = \\Phi(\\pmb x)\\)의 좌표이면\n\\[ \\pmb y = \\pmb C \\hat {\\pmb y} \\]\n두 좌표 \\(\\hat {\\pmb x}\\) 와 \\(\\hat {\\pmb y}\\) 사이의 관계는 다음과 같다.\n\\[ \\hat {\\pmb y} = \\pmb A_{\\Phi} \\hat {\\pmb x}  \\tag{11.6}\\]\n참고로 \\(\\RR^n\\) 에서 \\(\\RR^m\\) 으로의 선형사상 \\(\\Phi: \\RR^n \\rightarrow \\RR^m\\) 를 생각하고 각 공간의 기저를 표준 기저(standard basis)로 고려하면 변환행렬 \\(\\pmb A_{\\Phi}\\) 는 선형사상 \\(\\pmb y = \\Phi(\\pmb x )\\) 을 나타내는 \\(m \\times n\\) 행렬이다.\n\\[ \\pmb y = \\pmb A_{\\Phi} \\pmb x  \\tag{11.7}\\]\n\n\n11.2.3 예제\n\n부교재 Example 2.21 (Transformation Matrix) 참조\n부교재 Example 2.22 (Linear Transformations of Vectors) 참조",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>선형사상의 변환행렬</span>"
    ]
  },
  {
    "objectID": "qmds/12_linear_transform_basis.html",
    "href": "qmds/12_linear_transform_basis.html",
    "title": "12  기저변환과 변환행렬",
    "section": "",
    "text": "노트\n\n\n\n강의 슬라이드 12번 기저변환과 변환행렬의 주제는 추후에 강의합니다.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>기저변환과 변환행렬</span>"
    ]
  },
  {
    "objectID": "qmds/13_linear_kernel.html#핵과-상의-정의",
    "href": "qmds/13_linear_kernel.html#핵과-상의-정의",
    "title": "13  선형변환의 핵과 상",
    "section": "13.1 핵과 상의 정의",
    "text": "13.1 핵과 상의 정의\n\n정의 13.1 (선형변환의 핵과 상) 벡터공간 \\(V\\), \\(W\\) 사이의 선형사상 \\(T :V \\rightarrow W\\)를 고려하자. 선형사상 \\(T\\) 의핵(kernel) \\(Ker(T)\\) 또는 영공간(null space) \\(N (T )\\) 는 다음과 같이 정의된다:\n\\[ ker(T) = N (T ) = \\{ \\pmb v \\in V \\mid T( \\pmb v) = \\pmb 0 \\} \\]\n또한 선형사상 \\(T\\) 의 상(range) 또는 치역(image) \\(Im(T)\\) 는 다음과 같이 정의된다:\n\\[ Im(T) = T(V) = \\{ T(\\pmb v) \\mid \\in V \\} \\]\n\n\n\n\n\n선형변환의 핵과 상\n\n\n\n\n13.1.1 예제\n\n부교재 Example 2.25 (Image and Kernel of a Linear Mapping)",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>선형변환의 핵과 상</span>"
    ]
  },
  {
    "objectID": "qmds/14_affine.html",
    "href": "qmds/14_affine.html",
    "title": "14  아핀공간",
    "section": "",
    "text": "노트\n\n\n\n강의 슬라이드 14번 아핀공간의 주제는 추후에 강의합니다.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>아핀공간</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Deisenroth, Marc Peter, A Aldo Faisal, and Cheng Soon Ong. 2020.\nMathematics for Machine Learning. Cambridge University Press.",
    "crumbs": [
      "References"
    ]
  }
]